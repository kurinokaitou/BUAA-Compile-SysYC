@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}

@aaa = constant i32 1
@bbb = constant i32 2
@ccc = constant i32 3
@ggg = constant i32 3
@hhh = constant i32 -1
@iii = constant i32 2
@arr1 = constant [2 x i32] [i32 0, i32 1]
@arr2 = constant [1 x i32] [i32 0]
@arr3 = constant [4 x i32] [i32 1, i32 2, i32 3, i32 4]

@.str1 = constant [10 x i8] c"19231240\0a\00"
@.str2 = constant [2 x i8] c"\0a\00"
@.str3 = constant [2 x i8] c"\0a\00"
@.str4 = constant [2 x i8] c"\0a\00"
@.str5 = constant [2 x i8] c"\0a\00"
@.str6 = constant [2 x i8] c"\0a\00"
@.str7 = constant [2 x i8] c"\0a\00"

define void @nothing() #0 {
_entry:
	%g_aaa = getelementptr inbounds i32, i32* @aaa, i32 0
	%g_bbb = getelementptr inbounds i32, i32* @bbb, i32 0
	%g_ccc = getelementptr inbounds i32, i32* @ccc, i32 0
	%g_ggg = getelementptr inbounds i32, i32* @ggg, i32 0
	%g_hhh = getelementptr inbounds i32, i32* @hhh, i32 0
	%g_iii = getelementptr inbounds i32, i32* @iii, i32 0
	%g_arr1 = getelementptr inbounds [2 x i32], [2 x i32]* @arr1, i32 0, i32 0
	%g_arr2 = getelementptr inbounds [1 x i32], [1 x i32]* @arr2, i32 0, i32 0
	%g_arr3 = getelementptr inbounds [4 x i32], [4 x i32]* @arr3, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	ret void
}

define void @nothing1(i32 %a) #0 {
_entry:
	%g_aaa = getelementptr inbounds i32, i32* @aaa, i32 0
	%g_bbb = getelementptr inbounds i32, i32* @bbb, i32 0
	%g_ccc = getelementptr inbounds i32, i32* @ccc, i32 0
	%g_ggg = getelementptr inbounds i32, i32* @ggg, i32 0
	%g_hhh = getelementptr inbounds i32, i32* @hhh, i32 0
	%g_iii = getelementptr inbounds i32, i32* @iii, i32 0
	%g_arr1 = getelementptr inbounds [2 x i32], [2 x i32]* @arr1, i32 0, i32 0
	%g_arr2 = getelementptr inbounds [1 x i32], [1 x i32]* @arr2, i32 0, i32 0
	%g_arr3 = getelementptr inbounds [4 x i32], [4 x i32]* @arr3, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %a, i32* %_x1, align 4
	ret void
}

define void @nothing2(i32 %a, i32 %b, i32 %c) #0 {
_entry:
	%g_aaa = getelementptr inbounds i32, i32* @aaa, i32 0
	%g_bbb = getelementptr inbounds i32, i32* @bbb, i32 0
	%g_ccc = getelementptr inbounds i32, i32* @ccc, i32 0
	%g_ggg = getelementptr inbounds i32, i32* @ggg, i32 0
	%g_hhh = getelementptr inbounds i32, i32* @hhh, i32 0
	%g_iii = getelementptr inbounds i32, i32* @iii, i32 0
	%g_arr1 = getelementptr inbounds [2 x i32], [2 x i32]* @arr1, i32 0, i32 0
	%g_arr2 = getelementptr inbounds [1 x i32], [1 x i32]* @arr2, i32 0, i32 0
	%g_arr3 = getelementptr inbounds [4 x i32], [4 x i32]* @arr3, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %a, i32* %_x1, align 4
	%_t3 = alloca i32, align 4
	%_x4 = getelementptr inbounds i32, i32* %_t3, i32 0
	; store 5
	store i32 %b, i32* %_x4, align 4
	%_t6 = alloca i32, align 4
	%_x7 = getelementptr inbounds i32, i32* %_t6, i32 0
	; store 8
	store i32 %c, i32* %_x7, align 4
	ret void
}

define void @nothing3(i32 * %a, i32 * %b) #0 {
_entry:
	%g_aaa = getelementptr inbounds i32, i32* @aaa, i32 0
	%g_bbb = getelementptr inbounds i32, i32* @bbb, i32 0
	%g_ccc = getelementptr inbounds i32, i32* @ccc, i32 0
	%g_ggg = getelementptr inbounds i32, i32* @ggg, i32 0
	%g_hhh = getelementptr inbounds i32, i32* @hhh, i32 0
	%g_iii = getelementptr inbounds i32, i32* @iii, i32 0
	%g_arr1 = getelementptr inbounds [2 x i32], [2 x i32]* @arr1, i32 0, i32 0
	%g_arr2 = getelementptr inbounds [1 x i32], [1 x i32]* @arr2, i32 0, i32 0
	%g_arr3 = getelementptr inbounds [4 x i32], [4 x i32]* @arr3, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	ret void
}

define i32 @zero() #0 {
_entry:
	%g_aaa = getelementptr inbounds i32, i32* @aaa, i32 0
	%g_bbb = getelementptr inbounds i32, i32* @bbb, i32 0
	%g_ccc = getelementptr inbounds i32, i32* @ccc, i32 0
	%g_ggg = getelementptr inbounds i32, i32* @ggg, i32 0
	%g_hhh = getelementptr inbounds i32, i32* @hhh, i32 0
	%g_iii = getelementptr inbounds i32, i32* @iii, i32 0
	%g_arr1 = getelementptr inbounds [2 x i32], [2 x i32]* @arr1, i32 0, i32 0
	%g_arr2 = getelementptr inbounds [1 x i32], [1 x i32]* @arr2, i32 0, i32 0
	%g_arr3 = getelementptr inbounds [4 x i32], [4 x i32]* @arr3, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	ret i32 0
}

define i32 @main() #0 {
_entry:
	%g_aaa = getelementptr inbounds i32, i32* @aaa, i32 0
	%g_bbb = getelementptr inbounds i32, i32* @bbb, i32 0
	%g_ccc = getelementptr inbounds i32, i32* @ccc, i32 0
	%g_ggg = getelementptr inbounds i32, i32* @ggg, i32 0
	%g_hhh = getelementptr inbounds i32, i32* @hhh, i32 0
	%g_iii = getelementptr inbounds i32, i32* @iii, i32 0
	%g_arr1 = getelementptr inbounds [2 x i32], [2 x i32]* @arr1, i32 0, i32 0
	%g_arr2 = getelementptr inbounds [1 x i32], [1 x i32]* @arr2, i32 0, i32 0
	%g_arr3 = getelementptr inbounds [4 x i32], [4 x i32]* @arr3, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	%_t2 = alloca [3 x i32], align 4
	%_x3 = getelementptr inbounds [3 x i32], [3 x i32]* %_t2, i32 0, i32 0
	; store 4
	store i32 0, i32* %_x3, align 4
	; store 5
	%_t6 = getelementptr inbounds i32, i32* %_x3, i32 1
	store i32 1, i32* %_t6, align 4
	; store 7
	%_t8 = getelementptr inbounds i32, i32* %_x3, i32 2
	store i32 2, i32* %_t8, align 4
	%_t9 = alloca [4 x i32], align 4
	%_x10 = getelementptr inbounds [4 x i32], [4 x i32]* %_t9, i32 0, i32 0
	; store 11
	store i32 1, i32* %_x10, align 4
	; store 12
	%_t13 = getelementptr inbounds i32, i32* %_x10, i32 1
	store i32 2, i32* %_t13, align 4
	; store 14
	%_t15 = getelementptr inbounds i32, i32* %_x10, i32 2
	store i32 3, i32* %_t15, align 4
	; store 16
	%_t17 = getelementptr inbounds i32, i32* %_x10, i32 3
	store i32 4, i32* %_t17, align 4
	%_t18 = alloca i32, align 4
	%_x19 = getelementptr inbounds i32, i32* %_t18, i32 0
	; store 20
	store i32 2, i32* %_x19, align 4
	%_t21 = alloca i32, align 4
	%_x22 = getelementptr inbounds i32, i32* %_t21, i32 0
	; store 23
	store i32 3, i32* %_x22, align 4
	%_x24 = load i32, i32* %_x19, align 4
	%_x25 = load i32, i32* %_x22, align 4
	%_x26 = add i32 %_x24, %_x25
	%_t27 = alloca i32, align 4
	%_x28 = getelementptr inbounds i32, i32* %_t27, i32 0
	; store 29
	store i32 %_x26, i32* %_x28, align 4
	%_t30 = alloca i32, align 4
	%_x31 = getelementptr inbounds i32, i32* %_t30, i32 0
	; store 32
	store i32 0, i32* %_x31, align 4
	br label %_b1
_b1: ; preds = %_b0, %_b4, %_b5
	; if 0 then _b2 else _b6
	%_t33 = icmp ne i32 0, 0
	br i1 %_t33, label %_b2, label %_b6
_b2: ; preds = %_b1
	%_x34 = load i32, i32* %_x31, align 4
	; getelementptr 35
	%_t36 = mul i32 %_x34, 1
	%_x35 = getelementptr inbounds i32, i32* %_x3, i32 %_t36
	%_x37 = load i32, i32* %_x35, align 4
	%_t38 = icmp eq i32 %_x37, 3
	%_x39 = zext i1 %_t38 to i32
	; if %_x39 then _b3 else _b4
	%_t40 = icmp ne i32 %_x39, 0
	br i1 %_t40, label %_b3, label %_b4
_b3: ; preds = %_b2
	br label %_b6
_b4: ; preds = %_b2
	br label %_b1
_b5: ; preds = 
	%_x41 = load i32, i32* %_x31, align 4
	; getelementptr 42
	%_t43 = mul i32 %_x41, 1
	%_x42 = getelementptr inbounds i32, i32* %_x3, i32 %_t43
	; store 44
	store i32 1, i32* %_x42, align 4
	%_x45 = load i32, i32* %_x31, align 4
	%_x46 = add i32 %_x45, 1
	; store 47
	store i32 %_x46, i32* %_x31, align 4
	br label %_b1
_b6: ; preds = %_b1, %_b3
	; getelementptr 48
	%_x48 = getelementptr inbounds i32, i32* %_x10, i32 2
	; getelementptr 49
	%_x49 = getelementptr inbounds i32, i32* %_x48, i32 1
	; getelementptr 50
	%_x50 = getelementptr inbounds i32, i32* %_x3, i32 1
	%_x51 = load i32, i32* %_x50, align 4
	; store 52
	store i32 %_x51, i32* %_x49, align 4
	; getelementptr 53
	%_x53 = getelementptr inbounds i32, i32* %_x10, i32 2
	; getelementptr 54
	%_x54 = getelementptr inbounds i32, i32* %_x53, i32 1
	%_x55 = load i32, i32* %_x54, align 4
	%_t56 = icmp eq i32 %_x55, 1
	%_x57 = zext i1 %_t56 to i32
	; if %_x57 then _b7 else _b8
	%_t58 = icmp ne i32 %_x57, 0
	br i1 %_t58, label %_b7, label %_b8
_b7: ; preds = %_b6
	; getelementptr 59
	%_x59 = getelementptr inbounds i32, i32* %_x10, i32 2
	; getelementptr 60
	%_x60 = getelementptr inbounds i32, i32* %_x59, i32 1
	; store 61
	store i32 1, i32* %_x60, align 4
	br label %_b9
_b8: ; preds = %_b6
	; getelementptr 62
	%_x62 = getelementptr inbounds i32, i32* %_x10, i32 2
	; getelementptr 63
	%_x63 = getelementptr inbounds i32, i32* %_x62, i32 1
	; store 64
	store i32 0, i32* %_x63, align 4
	br label %_b9
_b9: ; preds = %_b7, %_b8
	%_x65 = call i32 @getint()
	; store 66
	store i32 %_x65, i32* %_x1, align 4
	%_x67 = load i32, i32* %_x22, align 4
	%_x68 = load i32, i32* %_x28, align 4
	%_x69 = add i32 %_x67, %_x68
	; store 70
	store i32 %_x69, i32* %_x19, align 4
	%_x71 = load i32, i32* %_x22, align 4
	%_x72 = load i32, i32* %_x28, align 4
	%_x73 = mul i32 %_x71, %_x72
	; store 74
	store i32 %_x73, i32* %_x19, align 4
	%_x75 = load i32, i32* %_x22, align 4
	%_x76 = load i32, i32* %_x28, align 4
	%_x77 = sub i32 %_x75, %_x76
	; store 78
	store i32 %_x77, i32* %_x19, align 4
	%_x79 = load i32, i32* %_x22, align 4
	%_x80 = load i32, i32* %_x28, align 4
	%_x81 = add i32 %_x79, %_x80
	%_x82 = load i32, i32* %_x28, align 4
	%_x83 = add i32 %_x81, %_x82
	; store 84
	store i32 %_x83, i32* %_x19, align 4
	%_x85 = load i32, i32* %_x22, align 4
	%_x86 = sdiv i32 %_x85, 1
	; store 87
	store i32 %_x86, i32* %_x19, align 4
	; store 88
	store i32 1, i32* %_x28, align 4
	%_x89 = load i32, i32* %_x22, align 4
	%_x90 = sdiv i32 %_x89, 1
	; store 91
	store i32 %_x90, i32* %_x19, align 4
	%_x92 = load i32, i32* %_x22, align 4
	%_x93 = srem i32 %_x92, 1
	; store 94
	store i32 %_x93, i32* %_x19, align 4
	%_t95 = alloca i32, align 4
	%_x96 = getelementptr inbounds i32, i32* %_t95, i32 0
	; store 97
	store i32 1, i32* %_x96, align 4
	%_t98 = alloca i32, align 4
	%_x99 = getelementptr inbounds i32, i32* %_t98, i32 0
	; store 100
	store i32 0, i32* %_x99, align 4
	%_t101 = alloca i32, align 4
	%_x102 = getelementptr inbounds i32, i32* %_t101, i32 0
	%_x103 = load i32, i32* %_x96, align 4
	%_x104 = load i32, i32* %_x99, align 4
	%_x105 = add i32 %_x103, %_x104
	; if %_x105 then _b10 else _b11
	%_t106 = icmp ne i32 %_x105, 0
	br i1 %_t106, label %_b10, label %_b11
_b10: ; preds = %_b9
	; store 107
	store i32 1, i32* %_x96, align 4
	br label %_b12
_b11: ; preds = %_b9
	br label %_b12
_b12: ; preds = %_b10, %_b11
	%_x108 = load i32, i32* %_x99, align 4
	%_t109 = icmp eq i32 %_x108, 0
	%_x110 = zext i1 %_t109 to i32
	; if %_x110 then _b13 else _b14
	%_t111 = icmp ne i32 %_x110, 0
	br i1 %_t111, label %_b13, label %_b14
_b13: ; preds = %_b12
	; store 112
	store i32 1, i32* %_x96, align 4
	br label %_b15
_b14: ; preds = %_b12
	br label %_b15
_b15: ; preds = %_b13, %_b14
	%_x113 = load i32, i32* %_x96, align 4
	%_x114 = load i32, i32* %_x99, align 4
	%_x115 = sub i32 %_x113, %_x114
	; if %_x115 then _b16 else _b17
	%_t116 = icmp ne i32 %_x115, 0
	br i1 %_t116, label %_b16, label %_b17
_b16: ; preds = %_b15
	; store 117
	store i32 1, i32* %_x96, align 4
	br label %_b18
_b17: ; preds = %_b15
	br label %_b18
_b18: ; preds = %_b16, %_b17
	%_x118 = load i32, i32* %_x96, align 4
	%_x119 = load i32, i32* %_x99, align 4
	%_t120 = icmp slt i32 %_x118, %_x119
	%_x121 = zext i1 %_t120 to i32
	; if %_x121 then _b19 else _b20
	%_t122 = icmp ne i32 %_x121, 0
	br i1 %_t122, label %_b19, label %_b20
_b19: ; preds = %_b18
	; store 123
	store i32 1, i32* %_x96, align 4
	br label %_b21
_b20: ; preds = %_b18
	br label %_b21
_b21: ; preds = %_b19, %_b20
	%_x124 = load i32, i32* %_x96, align 4
	%_x125 = load i32, i32* %_x99, align 4
	%_t126 = icmp sle i32 %_x124, %_x125
	%_x127 = zext i1 %_t126 to i32
	; if %_x127 then _b22 else _b23
	%_t128 = icmp ne i32 %_x127, 0
	br i1 %_t128, label %_b22, label %_b23
_b22: ; preds = %_b21
	; store 129
	store i32 1, i32* %_x96, align 4
	br label %_b24
_b23: ; preds = %_b21
	br label %_b24
_b24: ; preds = %_b22, %_b23
	%_x130 = load i32, i32* %_x96, align 4
	%_x131 = load i32, i32* %_x99, align 4
	%_t132 = icmp sge i32 %_x130, %_x131
	%_x133 = zext i1 %_t132 to i32
	; if %_x133 then _b25 else _b26
	%_t134 = icmp ne i32 %_x133, 0
	br i1 %_t134, label %_b25, label %_b26
_b25: ; preds = %_b24
	; store 135
	store i32 1, i32* %_x96, align 4
	br label %_b27
_b26: ; preds = %_b24
	br label %_b27
_b27: ; preds = %_b25, %_b26
	%_x136 = load i32, i32* %_x96, align 4
	%_x137 = load i32, i32* %_x99, align 4
	%_t138 = icmp ne i32 %_x136, %_x137
	%_x139 = zext i1 %_t138 to i32
	; if %_x139 then _b28 else _b29
	%_t140 = icmp ne i32 %_x139, 0
	br i1 %_t140, label %_b28, label %_b29
_b28: ; preds = %_b27
	; store 141
	store i32 1, i32* %_x96, align 4
	br label %_b30
_b29: ; preds = %_b27
	br label %_b30
_b30: ; preds = %_b28, %_b29
	%_t142 = getelementptr inbounds [10 x i8], [10 x i8]* @.str1, i32 0, i32 0
	call void @putstr(i8* %_t142)
	%_x143 = load i32, i32* %_x1, align 4
	call void @putint(i32 %_x143)
	%_t144 = getelementptr inbounds [2 x i8], [2 x i8]* @.str2, i32 0, i32 0
	call void @putstr(i8* %_t144)
	; getelementptr 145
	%_x145 = getelementptr inbounds i32, i32* %_x3, i32 0
	%_x146 = load i32, i32* %_x145, align 4
	call void @putint(i32 %_x146)
	%_t147 = getelementptr inbounds [2 x i8], [2 x i8]* @.str3, i32 0, i32 0
	call void @putstr(i8* %_t147)
	; getelementptr 148
	%_x148 = getelementptr inbounds i32, i32* %_x3, i32 0
	%_x149 = load i32, i32* %_x148, align 4
	call void @putint(i32 %_x149)
	%_t150 = getelementptr inbounds [2 x i8], [2 x i8]* @.str4, i32 0, i32 0
	call void @putstr(i8* %_t150)
	; getelementptr 151
	%_x151 = getelementptr inbounds i32, i32* %_x3, i32 0
	%_x152 = load i32, i32* %_x151, align 4
	call void @putint(i32 %_x152)
	%_t153 = getelementptr inbounds [2 x i8], [2 x i8]* @.str5, i32 0, i32 0
	call void @putstr(i8* %_t153)
	; getelementptr 154
	%_x154 = getelementptr inbounds i32, i32* %_x3, i32 0
	%_x155 = load i32, i32* %_x154, align 4
	call void @putint(i32 %_x155)
	%_t156 = getelementptr inbounds [2 x i8], [2 x i8]* @.str6, i32 0, i32 0
	call void @putstr(i8* %_t156)
	; getelementptr 157
	%_x157 = getelementptr inbounds i32, i32* %_x3, i32 0
	%_x158 = load i32, i32* %_x157, align 4
	call void @putint(i32 %_x158)
	%_t159 = getelementptr inbounds [2 x i8], [2 x i8]* @.str7, i32 0, i32 0
	call void @putstr(i8* %_t159)
	ret i32 0
}

