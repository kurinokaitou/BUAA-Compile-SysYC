@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}
@.str1 = constant [10 x i8] c"21210109\0a\00"
@.str2 = constant [1 x i8] c"\00"
@.str3 = constant [3 x i8] c", \00"
@.str4 = constant [2 x i8] c"\0a\00"
@.str5 = constant [1 x i8] c"\00"
@.str6 = constant [3 x i8] c", \00"
@.str7 = constant [2 x i8] c"\0a\00"

define i32 @max(i32 * %a, i32 %len) #0 {
_entry:
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %len, i32* %_x1, align 4
	%_t3 = alloca i32, align 4
	%_x4 = getelementptr inbounds i32, i32* %_t3, i32 0
	; store 5
	store i32 1, i32* %_x4, align 4
	; getelementptr 6
	%_x6 = getelementptr inbounds i32, i32* %a, i32 0
	%_x7 = load i32, i32* %_x6, align 4
	%_t8 = alloca i32, align 4
	%_x9 = getelementptr inbounds i32, i32* %_t8, i32 0
	; store 10
	store i32 %_x7, i32* %_x9, align 4
	br label %_b1
_b1: ; preds = %_b0, %_b5
	%_x11 = load i32, i32* %_x4, align 4
	%_x12 = load i32, i32* %_x1, align 4
	%_t13 = icmp slt i32 %_x11, %_x12
	%_x14 = zext i1 %_t13 to i32
	; if %_x14 then _b2 else _b6
	%_t15 = icmp ne i32 %_x14, 0
	br i1 %_t15, label %_b2, label %_b6
_b2: ; preds = %_b1
	%_x16 = load i32, i32* %_x4, align 4
	; getelementptr 17
	%_t18 = mul i32 %_x16, 1
	%_x17 = getelementptr inbounds i32, i32* %a, i32 %_t18
	%_x19 = load i32, i32* %_x17, align 4
	%_x20 = load i32, i32* %_x9, align 4
	%_t21 = icmp slt i32 %_x19, %_x20
	%_x22 = zext i1 %_t21 to i32
	; if %_x22 then _b3 else _b4
	%_t23 = icmp ne i32 %_x22, 0
	br i1 %_t23, label %_b3, label %_b4
_b3: ; preds = %_b2
	%_x24 = load i32, i32* %_x4, align 4
	; getelementptr 25
	%_t26 = mul i32 %_x24, 1
	%_x25 = getelementptr inbounds i32, i32* %a, i32 %_t26
	%_x27 = load i32, i32* %_x25, align 4
	; store 28
	store i32 %_x27, i32* %_x9, align 4
	br label %_b5
_b4: ; preds = %_b2
	br label %_b5
_b5: ; preds = %_b3, %_b4
	%_x29 = load i32, i32* %_x4, align 4
	%_x30 = add i32 %_x29, 1
	; store 31
	store i32 %_x30, i32* %_x4, align 4
	br label %_b1
_b6: ; preds = %_b1
	%_x32 = load i32, i32* %_x9, align 4
	ret i32 %_x32
}

define void @dummy(i32 * %a) #0 {
_entry:
	br label %_b0
_b0: ; preds = 
	ret void
}

define i32 @main() #0 {
_entry:
	br label %_b0
_b0: ; preds = 
	%_t0 = getelementptr inbounds [10 x i8], [10 x i8]* @.str1, i32 0, i32 0
	call void @putstr(i8* %_t0)
	%_t1 = alloca [2 x i32], align 4
	%_x2 = getelementptr inbounds [2 x i32], [2 x i32]* %_t1, i32 0, i32 0
	; store 3
	store i32 1, i32* %_x2, align 4
	; store 4
	%_t5 = getelementptr inbounds i32, i32* %_x2, i32 1
	store i32 2, i32* %_t5, align 4
	%_t6 = alloca [4 x i32], align 4
	%_x7 = getelementptr inbounds [4 x i32], [4 x i32]* %_t6, i32 0, i32 0
	; store 8
	store i32 1, i32* %_x7, align 4
	; store 9
	%_t10 = getelementptr inbounds i32, i32* %_x7, i32 1
	store i32 2, i32* %_t10, align 4
	; store 11
	%_t12 = getelementptr inbounds i32, i32* %_x7, i32 2
	store i32 3, i32* %_t12, align 4
	; store 13
	%_t14 = getelementptr inbounds i32, i32* %_x7, i32 3
	store i32 4, i32* %_t14, align 4
	%_t15 = alloca [2 x i32], align 4
	%_x16 = getelementptr inbounds [2 x i32], [2 x i32]* %_t15, i32 0, i32 0
	; store 17
	store i32 1, i32* %_x16, align 4
	; store 18
	%_t19 = getelementptr inbounds i32, i32* %_x16, i32 1
	store i32 2, i32* %_t19, align 4
	%_t20 = alloca [4 x i32], align 4
	%_x21 = getelementptr inbounds [4 x i32], [4 x i32]* %_t20, i32 0, i32 0
	; store 22
	store i32 1, i32* %_x21, align 4
	; store 23
	%_t24 = getelementptr inbounds i32, i32* %_x21, i32 1
	store i32 2, i32* %_t24, align 4
	; store 25
	%_t26 = getelementptr inbounds i32, i32* %_x21, i32 2
	store i32 3, i32* %_t26, align 4
	; store 27
	%_t28 = getelementptr inbounds i32, i32* %_x21, i32 3
	store i32 4, i32* %_t28, align 4
	; getelementptr 29
	%_x29 = getelementptr inbounds i32, i32* %_x16, i32 0
	%_x30 = call i32 @max(i32 * %_x29, i32 2)
	; getelementptr 31
	%_x31 = getelementptr inbounds i32, i32* %_x21, i32 2
	%_x32 = call i32 @max(i32 * %_x31, i32 2)
	%_t33 = getelementptr inbounds [1 x i8], [1 x i8]* @.str2, i32 0, i32 0
	call void @putstr(i8* %_t33)
	call void @putint(i32 %_x30)
	%_t34 = getelementptr inbounds [3 x i8], [3 x i8]* @.str3, i32 0, i32 0
	call void @putstr(i8* %_t34)
	call void @putint(i32 %_x32)
	%_t35 = getelementptr inbounds [2 x i8], [2 x i8]* @.str4, i32 0, i32 0
	call void @putstr(i8* %_t35)
	; getelementptr 36
	%_x36 = getelementptr inbounds i32, i32* %_x21, i32 0
	call void @dummy(i32 * %_x36)
	; getelementptr 37
	%_x37 = getelementptr inbounds i32, i32* %_x16, i32 0
	; store 38
	store i32 100, i32* %_x37, align 4
	; getelementptr 39
	%_x39 = getelementptr inbounds i32, i32* %_x21, i32 0
	; getelementptr 40
	%_x40 = getelementptr inbounds i32, i32* %_x39, i32 0
	; store 41
	store i32 1000, i32* %_x40, align 4
	; getelementptr 42
	%_x42 = getelementptr inbounds i32, i32* %_x16, i32 0
	%_x43 = load i32, i32* %_x42, align 4
	; getelementptr 44
	%_x44 = getelementptr inbounds i32, i32* %_x21, i32 0
	; getelementptr 45
	%_x45 = getelementptr inbounds i32, i32* %_x44, i32 0
	%_x46 = load i32, i32* %_x45, align 4
	%_t47 = getelementptr inbounds [1 x i8], [1 x i8]* @.str5, i32 0, i32 0
	call void @putstr(i8* %_t47)
	call void @putint(i32 %_x43)
	%_t48 = getelementptr inbounds [3 x i8], [3 x i8]* @.str6, i32 0, i32 0
	call void @putstr(i8* %_t48)
	call void @putint(i32 %_x46)
	%_t49 = getelementptr inbounds [2 x i8], [2 x i8]* @.str7, i32 0, i32 0
	call void @putstr(i8* %_t49)
	ret i32 0
}

