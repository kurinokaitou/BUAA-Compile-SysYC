@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}
@.str1 = constant [2 x i8] c"\0a\00"

define i32 @main() #0 {
_entry:
	br label %_b0
_b0: ; preds = 
	br label %_b1
_b1: ; preds = %_b0, %_b4
	%_x0 = phi i32 [1, %_b0], [%_x1, %_b4]
	%_x2 = phi i32 [0, %_b0], [%_x3, %_b4]
	%_t4 = icmp slt i32 %_x0, 10
	%_x5 = zext i1 %_t4 to i32
	; if %_x5 then _b2 else _b5
	%_t6 = icmp ne i32 %_x5, 0
	br i1 %_t6, label %_b2, label %_b5
_b2: ; preds = %_b1
	%_t7 = icmp eq i32 %_x0, 6
	%_x8 = zext i1 %_t7 to i32
	; if %_x8 then _b4 else _b3
	%_t9 = icmp ne i32 %_x8, 0
	br i1 %_t9, label %_b4, label %_b3
_b3: ; preds = %_b2
	%_x10 = add i32 %_x2, %_x0
	br label %_b4
_b4: ; preds = %_b3, %_b2
	%_x3 = phi i32 [%_x10, %_b3], [%_x2, %_b2]
	%_x1 = add i32 %_x0, 1
	br label %_b1
_b5: ; preds = %_b1
	call void @putint(i32 %_x2)
	%_t11 = getelementptr inbounds [2 x i8], [2 x i8]* @.str1, i32 0, i32 0
	call void @putstr(i8* %_t11)
	ret i32 0
}

