@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}
@g1 = global i32 zeroinitializer
@g2 = global i32 zeroinitializer
@g3 = global i32 zeroinitializer
@e1 = global i32 1
@f1 = global i32 1
@f2 = global i32 1
@i1 = global i32 2
@i2 = global i32 zeroinitializer
@a9 = global [10 x i32] zeroinitializer
@a12 = global [100 x i32] zeroinitializer
@h1 = global [10 x i32] zeroinitializer
@h2 = global [100 x i32] zeroinitializer
@h3 = global i32 zeroinitializer
@c = constant i32 10
@f3 = constant i32 5
@c1 = constant [2 x i32] [i32 1, i32 2]

@.str1 = constant [2 x i8] c"\0a\00"
@.str2 = constant [10 x i8] c"20373608\0a\00"
@.str3 = constant [20 x i8] c"this is outside g1 \00"
@.str4 = constant [2 x i8] c"\0a\00"
@.str5 = constant [19 x i8] c"this is inside g1 \00"
@.str6 = constant [2 x i8] c"\0a\00"
@.str7 = constant [20 x i8] c"this is outside g1 \00"
@.str8 = constant [8 x i8] c" agsin\0a\00"
@.str9 = constant [10 x i8] c"a9[0] is \00"
@.str10 = constant [2 x i8] c"\0a\00"
@.str11 = constant [14 x i8] c"a13[0][1] is \00"
@.str12 = constant [2 x i8] c"\0a\00"
@.str13 = constant [14 x i8] c"a13[0][2] is \00"
@.str14 = constant [2 x i8] c"\0a\00"
@.str15 = constant [14 x i8] c"a12[9][9] is \00"

define void @add_machine(i32 %e1, i32 %f1, i32 %f2) #0 {
_entry:
	%g_g1 = getelementptr inbounds i32, i32* @g1, i32 0
	%g_g2 = getelementptr inbounds i32, i32* @g2, i32 0
	%g_g3 = getelementptr inbounds i32, i32* @g3, i32 0
	%g_e1 = getelementptr inbounds i32, i32* @e1, i32 0
	%g_f1 = getelementptr inbounds i32, i32* @f1, i32 0
	%g_f2 = getelementptr inbounds i32, i32* @f2, i32 0
	%g_i1 = getelementptr inbounds i32, i32* @i1, i32 0
	%g_i2 = getelementptr inbounds i32, i32* @i2, i32 0
	%g_a9 = getelementptr inbounds [10 x i32], [10 x i32]* @a9, i32 0, i32 0
	%g_a12 = getelementptr inbounds [100 x i32], [100 x i32]* @a12, i32 0, i32 0
	%g_h1 = getelementptr inbounds [10 x i32], [10 x i32]* @h1, i32 0, i32 0
	%g_h2 = getelementptr inbounds [100 x i32], [100 x i32]* @h2, i32 0, i32 0
	%g_h3 = getelementptr inbounds i32, i32* @h3, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_f3 = getelementptr inbounds i32, i32* @f3, i32 0
	%g_c1 = getelementptr inbounds [2 x i32], [2 x i32]* @c1, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %e1, i32* %_x1, align 4
	%_t3 = alloca i32, align 4
	%_x4 = getelementptr inbounds i32, i32* %_t3, i32 0
	; store 5
	store i32 %f1, i32* %_x4, align 4
	%_t6 = alloca i32, align 4
	%_x7 = getelementptr inbounds i32, i32* %_t6, i32 0
	; store 8
	store i32 %f2, i32* %_x7, align 4
	%_t9 = alloca i32, align 4
	%_x10 = getelementptr inbounds i32, i32* %_t9, i32 0
	%_t11 = alloca i32, align 4
	%_x12 = getelementptr inbounds i32, i32* %_t11, i32 0
	%_t13 = alloca i32, align 4
	%_x14 = getelementptr inbounds i32, i32* %_t13, i32 0
	ret void
}

define i32 @arr_check_2(i32 * %a, i32 %e1, i32 %f1) #0 {
_entry:
	%g_g1 = getelementptr inbounds i32, i32* @g1, i32 0
	%g_g2 = getelementptr inbounds i32, i32* @g2, i32 0
	%g_g3 = getelementptr inbounds i32, i32* @g3, i32 0
	%g_e1 = getelementptr inbounds i32, i32* @e1, i32 0
	%g_f1 = getelementptr inbounds i32, i32* @f1, i32 0
	%g_f2 = getelementptr inbounds i32, i32* @f2, i32 0
	%g_i1 = getelementptr inbounds i32, i32* @i1, i32 0
	%g_i2 = getelementptr inbounds i32, i32* @i2, i32 0
	%g_a9 = getelementptr inbounds [10 x i32], [10 x i32]* @a9, i32 0, i32 0
	%g_a12 = getelementptr inbounds [100 x i32], [100 x i32]* @a12, i32 0, i32 0
	%g_h1 = getelementptr inbounds [10 x i32], [10 x i32]* @h1, i32 0, i32 0
	%g_h2 = getelementptr inbounds [100 x i32], [100 x i32]* @h2, i32 0, i32 0
	%g_h3 = getelementptr inbounds i32, i32* @h3, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_f3 = getelementptr inbounds i32, i32* @f3, i32 0
	%g_c1 = getelementptr inbounds [2 x i32], [2 x i32]* @c1, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %e1, i32* %_x1, align 4
	%_t3 = alloca i32, align 4
	%_x4 = getelementptr inbounds i32, i32* %_t3, i32 0
	; store 5
	store i32 %f1, i32* %_x4, align 4
	ret i32 1
}

define void @arr_check_1(i32 * %a) #0 {
_entry:
	%g_g1 = getelementptr inbounds i32, i32* @g1, i32 0
	%g_g2 = getelementptr inbounds i32, i32* @g2, i32 0
	%g_g3 = getelementptr inbounds i32, i32* @g3, i32 0
	%g_e1 = getelementptr inbounds i32, i32* @e1, i32 0
	%g_f1 = getelementptr inbounds i32, i32* @f1, i32 0
	%g_f2 = getelementptr inbounds i32, i32* @f2, i32 0
	%g_i1 = getelementptr inbounds i32, i32* @i1, i32 0
	%g_i2 = getelementptr inbounds i32, i32* @i2, i32 0
	%g_a9 = getelementptr inbounds [10 x i32], [10 x i32]* @a9, i32 0, i32 0
	%g_a12 = getelementptr inbounds [100 x i32], [100 x i32]* @a12, i32 0, i32 0
	%g_h1 = getelementptr inbounds [10 x i32], [10 x i32]* @h1, i32 0, i32 0
	%g_h2 = getelementptr inbounds [100 x i32], [100 x i32]* @h2, i32 0, i32 0
	%g_h3 = getelementptr inbounds i32, i32* @h3, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_f3 = getelementptr inbounds i32, i32* @f3, i32 0
	%g_c1 = getelementptr inbounds [2 x i32], [2 x i32]* @c1, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 1, i32* %_x1, align 4
	%_x3 = load i32, i32* %_x1, align 4
	call void @putint(i32 %_x3)
	%_t4 = getelementptr inbounds [2 x i8], [2 x i8]* @.str1, i32 0, i32 0
	call void @putstr(i8* %_t4)
	ret void
}

define i32 @main() #0 {
_entry:
	%g_g1 = getelementptr inbounds i32, i32* @g1, i32 0
	%g_g2 = getelementptr inbounds i32, i32* @g2, i32 0
	%g_g3 = getelementptr inbounds i32, i32* @g3, i32 0
	%g_e1 = getelementptr inbounds i32, i32* @e1, i32 0
	%g_f1 = getelementptr inbounds i32, i32* @f1, i32 0
	%g_f2 = getelementptr inbounds i32, i32* @f2, i32 0
	%g_i1 = getelementptr inbounds i32, i32* @i1, i32 0
	%g_i2 = getelementptr inbounds i32, i32* @i2, i32 0
	%g_a9 = getelementptr inbounds [10 x i32], [10 x i32]* @a9, i32 0, i32 0
	%g_a12 = getelementptr inbounds [100 x i32], [100 x i32]* @a12, i32 0, i32 0
	%g_h1 = getelementptr inbounds [10 x i32], [10 x i32]* @h1, i32 0, i32 0
	%g_h2 = getelementptr inbounds [100 x i32], [100 x i32]* @h2, i32 0, i32 0
	%g_h3 = getelementptr inbounds i32, i32* @h3, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_f3 = getelementptr inbounds i32, i32* @f3, i32 0
	%g_c1 = getelementptr inbounds [2 x i32], [2 x i32]* @c1, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	%_t2 = alloca i32, align 4
	%_x3 = getelementptr inbounds i32, i32* %_t2, i32 0
	; store 4
	store i32 1, i32* %_x3, align 4
	%_t5 = alloca i32, align 4
	%_x6 = getelementptr inbounds i32, i32* %_t5, i32 0
	; store 7
	store i32 2, i32* %_x6, align 4
	%_t8 = alloca i32, align 4
	%_x9 = getelementptr inbounds i32, i32* %_t8, i32 0
	; store 10
	store i32 0, i32* %_x9, align 4
	%_t11 = alloca i32, align 4
	%_x12 = getelementptr inbounds i32, i32* %_t11, i32 0
	; store 13
	store i32 0, i32* %_x12, align 4
	%_t14 = alloca i32, align 4
	%_x15 = getelementptr inbounds i32, i32* %_t14, i32 0
	; store 16
	store i32 0, i32* %_x15, align 4
	%_t17 = alloca i32, align 4
	%_x18 = getelementptr inbounds i32, i32* %_t17, i32 0
	; store 19
	store i32 1, i32* %_x18, align 4
	%_t20 = alloca i32, align 4
	%_x21 = getelementptr inbounds i32, i32* %_t20, i32 0
	; store 22
	store i32 2, i32* %_x21, align 4
	%_t23 = alloca i32, align 4
	%_x24 = getelementptr inbounds i32, i32* %_t23, i32 0
	; store 25
	store i32 0, i32* %_x24, align 4
	%_t26 = alloca i32, align 4
	%_x27 = getelementptr inbounds i32, i32* %_t26, i32 0
	; store 28
	store i32 2, i32* %_x27, align 4
	%_t29 = alloca i32, align 4
	%_x30 = getelementptr inbounds i32, i32* %_t29, i32 0
	; store 31
	store i32 2, i32* %_x30, align 4
	%_t32 = alloca i32, align 4
	%_x33 = getelementptr inbounds i32, i32* %_t32, i32 0
	; store 34
	store i32 2, i32* %_x33, align 4
	%_t35 = alloca i32, align 4
	%_x36 = getelementptr inbounds i32, i32* %_t35, i32 0
	; store 37
	store i32 3, i32* %_x36, align 4
	%_t38 = alloca [3 x i32], align 4
	%_x39 = getelementptr inbounds [3 x i32], [3 x i32]* %_t38, i32 0, i32 0
	; store 40
	store i32 1, i32* %_x39, align 4
	; store 41
	%_t42 = getelementptr inbounds i32, i32* %_x39, i32 1
	store i32 2, i32* %_t42, align 4
	; store 43
	%_t44 = getelementptr inbounds i32, i32* %_x39, i32 2
	store i32 3, i32* %_t44, align 4
	%_t45 = alloca i32, align 4
	%_x46 = getelementptr inbounds i32, i32* %_t45, i32 0
	%_t47 = alloca i32, align 4
	%_x48 = getelementptr inbounds i32, i32* %_t47, i32 0
	; store 49
	store i32 1, i32* %_x48, align 4
	%_t50 = alloca i32, align 4
	%_x51 = getelementptr inbounds i32, i32* %_t50, i32 0
	; store 52
	store i32 1, i32* %_x51, align 4
	%_t53 = alloca i32, align 4
	%_x54 = getelementptr inbounds i32, i32* %_t53, i32 0
	; store 55
	store i32 2, i32* %_x54, align 4
	%_t56 = alloca i32, align 4
	%_x57 = getelementptr inbounds i32, i32* %_t56, i32 0
	; store 58
	store i32 3, i32* %_x57, align 4
	%_t59 = alloca i32, align 4
	%_x60 = getelementptr inbounds i32, i32* %_t59, i32 0
	; store 61
	store i32 20, i32* %_x60, align 4
	%_t62 = alloca [10 x i32], align 4
	%_x63 = getelementptr inbounds [10 x i32], [10 x i32]* %_t62, i32 0, i32 0
	; store 64
	store i32 1, i32* %_x63, align 4
	; store 65
	%_t66 = getelementptr inbounds i32, i32* %_x63, i32 1
	store i32 1, i32* %_t66, align 4
	; store 67
	%_t68 = getelementptr inbounds i32, i32* %_x63, i32 2
	store i32 1, i32* %_t68, align 4
	; store 69
	%_t70 = getelementptr inbounds i32, i32* %_x63, i32 3
	store i32 1, i32* %_t70, align 4
	; store 71
	%_t72 = getelementptr inbounds i32, i32* %_x63, i32 4
	store i32 1, i32* %_t72, align 4
	; store 73
	%_t74 = getelementptr inbounds i32, i32* %_x63, i32 5
	store i32 2, i32* %_t74, align 4
	; store 75
	%_t76 = getelementptr inbounds i32, i32* %_x63, i32 6
	store i32 2, i32* %_t76, align 4
	; store 77
	%_t78 = getelementptr inbounds i32, i32* %_x63, i32 7
	store i32 2, i32* %_t78, align 4
	; store 79
	%_t80 = getelementptr inbounds i32, i32* %_x63, i32 8
	store i32 2, i32* %_t80, align 4
	; store 81
	%_t82 = getelementptr inbounds i32, i32* %_x63, i32 9
	store i32 2, i32* %_t82, align 4
	%_t83 = alloca [16 x i32], align 4
	%_x84 = getelementptr inbounds [16 x i32], [16 x i32]* %_t83, i32 0, i32 0
	; store 85
	store i32 1, i32* %_x84, align 4
	; store 86
	%_t87 = getelementptr inbounds i32, i32* %_x84, i32 1
	store i32 2, i32* %_t87, align 4
	; store 88
	%_t89 = getelementptr inbounds i32, i32* %_x84, i32 2
	store i32 3, i32* %_t89, align 4
	; store 90
	%_t91 = getelementptr inbounds i32, i32* %_x84, i32 3
	store i32 4, i32* %_t91, align 4
	; store 92
	%_t93 = getelementptr inbounds i32, i32* %_x84, i32 4
	store i32 1, i32* %_t93, align 4
	; store 94
	%_t95 = getelementptr inbounds i32, i32* %_x84, i32 5
	store i32 2, i32* %_t95, align 4
	; store 96
	%_t97 = getelementptr inbounds i32, i32* %_x84, i32 6
	store i32 3, i32* %_t97, align 4
	; store 98
	%_t99 = getelementptr inbounds i32, i32* %_x84, i32 7
	store i32 4, i32* %_t99, align 4
	; store 100
	%_t101 = getelementptr inbounds i32, i32* %_x84, i32 8
	store i32 1, i32* %_t101, align 4
	; store 102
	%_t103 = getelementptr inbounds i32, i32* %_x84, i32 9
	store i32 2, i32* %_t103, align 4
	; store 104
	%_t105 = getelementptr inbounds i32, i32* %_x84, i32 10
	store i32 3, i32* %_t105, align 4
	; store 106
	%_t107 = getelementptr inbounds i32, i32* %_x84, i32 11
	store i32 4, i32* %_t107, align 4
	; store 108
	%_t109 = getelementptr inbounds i32, i32* %_x84, i32 12
	store i32 1, i32* %_t109, align 4
	; store 110
	%_t111 = getelementptr inbounds i32, i32* %_x84, i32 13
	store i32 2, i32* %_t111, align 4
	; store 112
	%_t113 = getelementptr inbounds i32, i32* %_x84, i32 14
	store i32 3, i32* %_t113, align 4
	; store 114
	%_t115 = getelementptr inbounds i32, i32* %_x84, i32 15
	store i32 4, i32* %_t115, align 4
	%_t116 = alloca [2 x i32], align 4
	%_x117 = getelementptr inbounds [2 x i32], [2 x i32]* %_t116, i32 0, i32 0
	; store 118
	store i32 1, i32* %_x117, align 4
	; store 119
	%_t120 = getelementptr inbounds i32, i32* %_x117, i32 1
	store i32 1, i32* %_t120, align 4
	%_t121 = alloca [4 x i32], align 4
	%_x122 = getelementptr inbounds [4 x i32], [4 x i32]* %_t121, i32 0, i32 0
	; store 123
	store i32 1, i32* %_x122, align 4
	; store 124
	%_t125 = getelementptr inbounds i32, i32* %_x122, i32 1
	store i32 2, i32* %_t125, align 4
	; store 126
	%_t127 = getelementptr inbounds i32, i32* %_x122, i32 2
	store i32 2, i32* %_t127, align 4
	; store 128
	%_t129 = getelementptr inbounds i32, i32* %_x122, i32 3
	store i32 3, i32* %_t129, align 4
	%_x130 = load i32, i32* %_x27, align 4
	%_x131 = load i32, i32* %_x3, align 4
	%_x132 = add i32 %_x130, %_x131
	%_x133 = load i32, i32* %_x30, align 4
	%_x134 = load i32, i32* %_x33, align 4
	call void @add_machine(i32 %_x132, i32 %_x133, i32 %_x134)
	%_t135 = getelementptr inbounds [10 x i8], [10 x i8]* @.str2, i32 0, i32 0
	call void @putstr(i8* %_t135)
	; getelementptr 136
	%_x136 = getelementptr inbounds i32, i32* %_x84, i32 0
	call void @arr_check_1(i32 * %_x136)
	; getelementptr 137
	%_x137 = getelementptr inbounds i32, i32* %_x63, i32 0
	call void @arr_check_1(i32 * %_x137)
	%_x138 = load i32, i32* %_x60, align 4
	%_x139 = add i32 4, %_x138
	%_x140 = load i32, i32* %_x27, align 4
	%_x141 = add i32 %_x139, %_x140
	; store 142
	store i32 %_x141, i32* %_x1, align 4
	; getelementptr 143
	%_x143 = getelementptr inbounds i32, i32* %g_a9, i32 0
	; store 144
	store i32 1, i32* %_x143, align 4
	; getelementptr 145
	%_x145 = getelementptr inbounds i32, i32* %g_a9, i32 1
	; store 146
	store i32 2, i32* %_x145, align 4
	; getelementptr 147
	%_x147 = getelementptr inbounds i32, i32* %g_a12, i32 0
	; getelementptr 148
	%_x148 = getelementptr inbounds i32, i32* %_x147, i32 0
	; store 149
	store i32 2, i32* %_x148, align 4
	; store 150
	store i32 0, i32* %_x6, align 4
	; store 151
	store i32 0, i32* %_x18, align 4
	%_x152 = load i32, i32* %_x9, align 4
	%_x153 = add i32 %_x152, 4
	; store 154
	store i32 %_x153, i32* %_x9, align 4
	%_x155 = load i32, i32* %_x9, align 4
	%_t156 = getelementptr inbounds [20 x i8], [20 x i8]* @.str3, i32 0, i32 0
	call void @putstr(i8* %_t156)
	call void @putint(i32 %_x155)
	%_t157 = getelementptr inbounds [2 x i8], [2 x i8]* @.str4, i32 0, i32 0
	call void @putstr(i8* %_t157)
	; getelementptr 158
	%_x158 = getelementptr inbounds i32, i32* %_x84, i32 0
	; getelementptr 159
	%_x159 = getelementptr inbounds i32, i32* %_x158, i32 1
	; getelementptr 160
	%_x160 = getelementptr inbounds i32, i32* %_x84, i32 0
	; getelementptr 161
	%_x161 = getelementptr inbounds i32, i32* %_x160, i32 1
	%_x162 = load i32, i32* %_x161, align 4
	%_x163 = load i32, i32* %_x9, align 4
	%_x164 = add i32 %_x162, %_x163
	; store 165
	store i32 %_x164, i32* %_x159, align 4
	%_t166 = alloca i32, align 4
	%_x167 = getelementptr inbounds i32, i32* %_t166, i32 0
	; store 168
	store i32 2, i32* %_x167, align 4
	%_t169 = alloca i32, align 4
	%_x170 = getelementptr inbounds i32, i32* %_t169, i32 0
	%_t171 = alloca i32, align 4
	%_x172 = getelementptr inbounds i32, i32* %_t171, i32 0
	%_t173 = alloca i32, align 4
	%_x174 = getelementptr inbounds i32, i32* %_t173, i32 0
	%_t175 = alloca i32, align 4
	%_x176 = getelementptr inbounds i32, i32* %_t175, i32 0
	%_t177 = alloca i32, align 4
	%_x178 = getelementptr inbounds i32, i32* %_t177, i32 0
	%_x179 = load i32, i32* %_x167, align 4
	%_x180 = add i32 %_x179, 1
	; store 181
	store i32 %_x180, i32* %_x167, align 4
	; getelementptr 182
	%_x182 = getelementptr inbounds i32, i32* %g_a9, i32 0
	%_x183 = load i32, i32* %_x167, align 4
	%_x184 = add i32 %_x183, 1
	; store 185
	store i32 %_x184, i32* %_x182, align 4
	%_x186 = load i32, i32* %_x167, align 4
	%_t187 = getelementptr inbounds [19 x i8], [19 x i8]* @.str5, i32 0, i32 0
	call void @putstr(i8* %_t187)
	call void @putint(i32 %_x186)
	%_t188 = getelementptr inbounds [2 x i8], [2 x i8]* @.str6, i32 0, i32 0
	call void @putstr(i8* %_t188)
	%_x189 = load i32, i32* %_x9, align 4
	%_x190 = add i32 %_x189, 1
	; store 191
	store i32 %_x190, i32* %_x9, align 4
	%_x192 = load i32, i32* %_x9, align 4
	%_t193 = getelementptr inbounds [20 x i8], [20 x i8]* @.str7, i32 0, i32 0
	call void @putstr(i8* %_t193)
	call void @putint(i32 %_x192)
	%_t194 = getelementptr inbounds [8 x i8], [8 x i8]* @.str8, i32 0, i32 0
	call void @putstr(i8* %_t194)
	br label %_b1
_b1: ; preds = %_b0, %_b5
	%_x195 = load i32, i32* %_x6, align 4
	%_t196 = icmp sle i32 %_x195, 9
	%_x197 = zext i1 %_t196 to i32
	; if %_x197 then _b2 else _b6
	%_t198 = icmp ne i32 %_x197, 0
	br i1 %_t198, label %_b2, label %_b6
_b2: ; preds = %_b1
	; store 199
	store i32 0, i32* %_x18, align 4
	br label %_b3
_b3: ; preds = %_b2, %_b4
	%_x200 = load i32, i32* %_x18, align 4
	%_t201 = icmp sle i32 %_x200, 9
	%_x202 = zext i1 %_t201 to i32
	; if %_x202 then _b4 else _b5
	%_t203 = icmp ne i32 %_x202, 0
	br i1 %_t203, label %_b4, label %_b5
_b4: ; preds = %_b3
	%_x204 = load i32, i32* %_x6, align 4
	%_x205 = load i32, i32* %_x18, align 4
	; getelementptr 206
	%_t207 = mul i32 %_x204, 10
	%_x206 = getelementptr inbounds i32, i32* %g_a12, i32 %_t207
	; getelementptr 208
	%_t209 = mul i32 %_x205, 1
	%_x208 = getelementptr inbounds i32, i32* %_x206, i32 %_t209
	; store 210
	store i32 1, i32* %_x208, align 4
	%_x211 = load i32, i32* %_x18, align 4
	%_x212 = add i32 %_x211, 1
	; store 213
	store i32 %_x212, i32* %_x18, align 4
	br label %_b3
_b5: ; preds = %_b3
	%_x214 = load i32, i32* %_x6, align 4
	%_x215 = add i32 %_x214, 1
	; store 216
	store i32 %_x215, i32* %_x6, align 4
	br label %_b1
_b6: ; preds = %_b1
	%_x217 = load i32, i32* %_x6, align 4
	%_t218 = icmp sgt i32 %_x217, 1
	%_x219 = zext i1 %_t218 to i32
	; if %_x219 then _b7 else _b8
	%_t220 = icmp ne i32 %_x219, 0
	br i1 %_t220, label %_b7, label %_b8
_b7: ; preds = %_b6
	%_x221 = load i32, i32* %_x6, align 4
	%_x222 = sub i32 %_x221, 1
	; store 223
	store i32 %_x222, i32* %_x6, align 4
	; store 224
	store i32 1, i32* %_x6, align 4
	; store 225
	store i32 -1, i32* %_x6, align 4
	br label %_b9
_b8: ; preds = %_b6
	%_x226 = load i32, i32* %_x6, align 4
	%_x227 = add i32 %_x226, 1
	; store 228
	store i32 %_x227, i32* %_x6, align 4
	br label %_b9
_b9: ; preds = %_b7, %_b8
	%_x229 = load i32, i32* %_x6, align 4
	%_t230 = icmp sgt i32 %_x229, 1
	%_x231 = zext i1 %_t230 to i32
	; if %_x231 then _b10 else _b11
	%_t232 = icmp ne i32 %_x231, 0
	br i1 %_t232, label %_b10, label %_b11
_b10: ; preds = %_b9
	br label %_b12
_b11: ; preds = %_b9
	br label %_b12
_b12: ; preds = %_b10, %_b11
	%_x233 = load i32, i32* %_x6, align 4
	%_t234 = icmp sgt i32 %_x233, 1
	%_x235 = zext i1 %_t234 to i32
	; if %_x235 then _b13 else _b14
	%_t236 = icmp ne i32 %_x235, 0
	br i1 %_t236, label %_b13, label %_b14
_b13: ; preds = %_b12
	br label %_b15
_b14: ; preds = %_b12
	br label %_b15
_b15: ; preds = %_b13, %_b14
	; getelementptr 237
	%_x237 = getelementptr inbounds i32, i32* %g_a9, i32 0
	%_x238 = load i32, i32* %_x237, align 4
	%_t239 = getelementptr inbounds [10 x i8], [10 x i8]* @.str9, i32 0, i32 0
	call void @putstr(i8* %_t239)
	call void @putint(i32 %_x238)
	%_t240 = getelementptr inbounds [2 x i8], [2 x i8]* @.str10, i32 0, i32 0
	call void @putstr(i8* %_t240)
	; getelementptr 241
	%_x241 = getelementptr inbounds i32, i32* %_x84, i32 0
	; getelementptr 242
	%_x242 = getelementptr inbounds i32, i32* %_x241, i32 1
	%_x243 = load i32, i32* %_x242, align 4
	%_t244 = getelementptr inbounds [14 x i8], [14 x i8]* @.str11, i32 0, i32 0
	call void @putstr(i8* %_t244)
	call void @putint(i32 %_x243)
	%_t245 = getelementptr inbounds [2 x i8], [2 x i8]* @.str12, i32 0, i32 0
	call void @putstr(i8* %_t245)
	; getelementptr 246
	%_x246 = getelementptr inbounds i32, i32* %_x84, i32 0
	; getelementptr 247
	%_x247 = getelementptr inbounds i32, i32* %_x246, i32 2
	%_x248 = load i32, i32* %_x247, align 4
	%_t249 = getelementptr inbounds [14 x i8], [14 x i8]* @.str13, i32 0, i32 0
	call void @putstr(i8* %_t249)
	call void @putint(i32 %_x248)
	%_t250 = getelementptr inbounds [2 x i8], [2 x i8]* @.str14, i32 0, i32 0
	call void @putstr(i8* %_t250)
	; getelementptr 251
	%_x251 = getelementptr inbounds i32, i32* %g_a12, i32 90
	; getelementptr 252
	%_x252 = getelementptr inbounds i32, i32* %_x251, i32 9
	%_x253 = load i32, i32* %_x252, align 4
	%_t254 = getelementptr inbounds [14 x i8], [14 x i8]* @.str15, i32 0, i32 0
	call void @putstr(i8* %_t254)
	call void @putint(i32 %_x253)
	ret i32 0
}

