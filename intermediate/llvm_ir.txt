@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}

@ints = global [10000 x i32] zeroinitializer
@intt = global i32 zeroinitializer
@chas = global [10000 x i32] zeroinitializer
@chat = global i32 zeroinitializer
@i = global i32 0
@ii = global i32 1
@c = global i32 zeroinitializer
@get = global [10000 x i32] zeroinitializer
@get2 = global [10000 x i32] zeroinitializer

define i32 @isdigit(i32 %x) #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %x, i32* %_x1, align 4
	%_x3 = load i32, i32* %_x1, align 4
	%_t4 = icmp sge i32 %_x3, 48
	%_x5 = zext i1 %_t4 to i32
	; if %_x5 then _b1 else _b2
	%_t6 = icmp ne i32 %_x5, 0
	br i1 %_t6, label %_b1, label %_b2
_b1: ; preds = %_b0
	%_x7 = load i32, i32* %_x1, align 4
	%_t8 = icmp sle i32 %_x7, 57
	%_x9 = zext i1 %_t8 to i32
	br label %_b2
_b2: ; preds = %_b0, %_b1
	%_x10 = phi i32 [%_x5, %_b0], [%_x9, %_b1]
	; if %_x10 then _b3 else _b4
	%_t11 = icmp ne i32 %_x10, 0
	br i1 %_t11, label %_b3, label %_b4
_b3: ; preds = %_b2
	ret i32 1
_b4: ; preds = %_b2
	br label %_b5
_b5: ; preds = %_b4
	ret i32 0
}

define i32 @power(i32 %b, i32 %a) #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %b, i32* %_x1, align 4
	%_t3 = alloca i32, align 4
	%_x4 = getelementptr inbounds i32, i32* %_t3, i32 0
	; store 5
	store i32 %a, i32* %_x4, align 4
	%_t6 = alloca i32, align 4
	%_x7 = getelementptr inbounds i32, i32* %_t6, i32 0
	; store 8
	store i32 1, i32* %_x7, align 4
	br label %_b1
_b1: ; preds = %_b0, %_b2
	%_x9 = load i32, i32* %_x4, align 4
	%_t10 = icmp ne i32 %_x9, 0
	%_x11 = zext i1 %_t10 to i32
	; if %_x11 then _b2 else _b3
	%_t12 = icmp ne i32 %_x11, 0
	br i1 %_t12, label %_b2, label %_b3
_b2: ; preds = %_b1
	%_x13 = load i32, i32* %_x7, align 4
	%_x14 = load i32, i32* %_x1, align 4
	%_x15 = mul i32 %_x13, %_x14
	; store 16
	store i32 %_x15, i32* %_x7, align 4
	%_x17 = load i32, i32* %_x4, align 4
	%_x18 = sub i32 %_x17, 1
	; store 19
	store i32 %_x18, i32* %_x4, align 4
	br label %_b1
_b3: ; preds = %_b1
	%_x20 = load i32, i32* %_x7, align 4
	ret i32 %_x20
}

define i32 @getstr(i32 * %get) #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	%_x2 = call i32 @getint()
	; store 3
	store i32 %_x2, i32* %_x1, align 4
	%_t4 = alloca i32, align 4
	%_x5 = getelementptr inbounds i32, i32* %_t4, i32 0
	; store 6
	store i32 0, i32* %_x5, align 4
	br label %_b1
_b1: ; preds = %_b0, %_b4
	%_x7 = load i32, i32* %_x1, align 4
	%_t8 = icmp ne i32 %_x7, 13
	%_x9 = zext i1 %_t8 to i32
	; if %_x9 then _b2 else _b3
	%_t10 = icmp ne i32 %_x9, 0
	br i1 %_t10, label %_b2, label %_b3
_b2: ; preds = %_b1
	%_x11 = load i32, i32* %_x1, align 4
	%_t12 = icmp ne i32 %_x11, 10
	%_x13 = zext i1 %_t12 to i32
	br label %_b3
_b3: ; preds = %_b1, %_b2
	%_x14 = phi i32 [%_x9, %_b1], [%_x13, %_b2]
	; if %_x14 then _b4 else _b5
	%_t15 = icmp ne i32 %_x14, 0
	br i1 %_t15, label %_b4, label %_b5
_b4: ; preds = %_b3
	%_x16 = load i32, i32* %_x5, align 4
	; getelementptr 17
	%_t18 = mul i32 %_x16, 1
	%_x17 = getelementptr inbounds i32, i32* %get, i32 %_t18
	%_x19 = load i32, i32* %_x1, align 4
	; store 20
	store i32 %_x19, i32* %_x17, align 4
	%_x21 = load i32, i32* %_x5, align 4
	%_x22 = add i32 %_x21, 1
	; store 23
	store i32 %_x22, i32* %_x5, align 4
	%_x24 = call i32 @getint()
	; store 25
	store i32 %_x24, i32* %_x1, align 4
	br label %_b1
_b5: ; preds = %_b3
	%_x26 = load i32, i32* %_x5, align 4
	ret i32 %_x26
}

define void @intpush(i32 %x) #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %x, i32* %_x1, align 4
	%_x3 = load i32, i32* %g_intt, align 4
	%_x4 = add i32 %_x3, 1
	; store 5
	store i32 %_x4, i32* %g_intt, align 4
	%_x6 = load i32, i32* %g_intt, align 4
	; getelementptr 7
	%_t8 = mul i32 %_x6, 1
	%_x7 = getelementptr inbounds i32, i32* %g_ints, i32 %_t8
	%_x9 = load i32, i32* %_x1, align 4
	; store 10
	store i32 %_x9, i32* %_x7, align 4
	ret void
}

define void @chapush(i32 %x) #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %x, i32* %_x1, align 4
	%_x3 = load i32, i32* %g_chat, align 4
	%_x4 = add i32 %_x3, 1
	; store 5
	store i32 %_x4, i32* %g_chat, align 4
	%_x6 = load i32, i32* %g_chat, align 4
	; getelementptr 7
	%_t8 = mul i32 %_x6, 1
	%_x7 = getelementptr inbounds i32, i32* %g_chas, i32 %_t8
	%_x9 = load i32, i32* %_x1, align 4
	; store 10
	store i32 %_x9, i32* %_x7, align 4
	ret void
}

define i32 @intpop() #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_x0 = load i32, i32* %g_intt, align 4
	%_x1 = sub i32 %_x0, 1
	; store 2
	store i32 %_x1, i32* %g_intt, align 4
	%_x3 = load i32, i32* %g_intt, align 4
	%_x4 = add i32 %_x3, 1
	; getelementptr 5
	%_t6 = mul i32 %_x4, 1
	%_x5 = getelementptr inbounds i32, i32* %g_ints, i32 %_t6
	%_x7 = load i32, i32* %_x5, align 4
	ret i32 %_x7
}

define i32 @chapop() #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_x0 = load i32, i32* %g_chat, align 4
	%_x1 = sub i32 %_x0, 1
	; store 2
	store i32 %_x1, i32* %g_chat, align 4
	%_x3 = load i32, i32* %g_chat, align 4
	%_x4 = add i32 %_x3, 1
	; getelementptr 5
	%_t6 = mul i32 %_x4, 1
	%_x5 = getelementptr inbounds i32, i32* %g_chas, i32 %_t6
	%_x7 = load i32, i32* %_x5, align 4
	ret i32 %_x7
}

define void @intadd(i32 %x) #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %x, i32* %_x1, align 4
	%_x3 = load i32, i32* %g_intt, align 4
	; getelementptr 4
	%_t5 = mul i32 %_x3, 1
	%_x4 = getelementptr inbounds i32, i32* %g_ints, i32 %_t5
	%_x6 = load i32, i32* %g_intt, align 4
	; getelementptr 7
	%_t8 = mul i32 %_x6, 1
	%_x7 = getelementptr inbounds i32, i32* %g_ints, i32 %_t8
	%_x9 = load i32, i32* %_x7, align 4
	%_x10 = mul i32 %_x9, 10
	; store 11
	store i32 %_x10, i32* %_x4, align 4
	%_x12 = load i32, i32* %g_intt, align 4
	; getelementptr 13
	%_t14 = mul i32 %_x12, 1
	%_x13 = getelementptr inbounds i32, i32* %g_ints, i32 %_t14
	%_x15 = load i32, i32* %g_intt, align 4
	; getelementptr 16
	%_t17 = mul i32 %_x15, 1
	%_x16 = getelementptr inbounds i32, i32* %g_ints, i32 %_t17
	%_x18 = load i32, i32* %_x16, align 4
	%_x19 = load i32, i32* %_x1, align 4
	%_x20 = add i32 %_x18, %_x19
	; store 21
	store i32 %_x20, i32* %_x13, align 4
	ret void
}

define i32 @find() #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	%_x0 = call i32 @chapop()
	; store 1
	store i32 %_x0, i32* %g_c, align 4
	%_x2 = load i32, i32* %g_ii, align 4
	; getelementptr 3
	%_t4 = mul i32 %_x2, 1
	%_x3 = getelementptr inbounds i32, i32* %g_get2, i32 %_t4
	; store 5
	store i32 32, i32* %_x3, align 4
	%_x6 = load i32, i32* %g_ii, align 4
	%_x7 = add i32 %_x6, 1
	; getelementptr 8
	%_t9 = mul i32 %_x7, 1
	%_x8 = getelementptr inbounds i32, i32* %g_get2, i32 %_t9
	%_x10 = load i32, i32* %g_c, align 4
	; store 11
	store i32 %_x10, i32* %_x8, align 4
	%_x12 = load i32, i32* %g_ii, align 4
	%_x13 = add i32 %_x12, 2
	; store 14
	store i32 %_x13, i32* %g_ii, align 4
	%_x15 = load i32, i32* %g_chat, align 4
	%_t16 = icmp eq i32 %_x15, 0
	%_x17 = zext i1 %_t16 to i32
	; if %_x17 then _b1 else _b2
	%_t18 = icmp ne i32 %_x17, 0
	br i1 %_t18, label %_b1, label %_b2
_b1: ; preds = %_b0
	ret i32 0
_b2: ; preds = %_b0
	br label %_b3
_b3: ; preds = %_b2
	ret i32 1
}

define i32 @main() #0 {
_entry:
	%g_ints = getelementptr inbounds [10000 x i32], [10000 x i32]* @ints, i32 0, i32 0
	%g_intt = getelementptr inbounds i32, i32* @intt, i32 0
	%g_chas = getelementptr inbounds [10000 x i32], [10000 x i32]* @chas, i32 0, i32 0
	%g_chat = getelementptr inbounds i32, i32* @chat, i32 0
	%g_i = getelementptr inbounds i32, i32* @i, i32 0
	%g_ii = getelementptr inbounds i32, i32* @ii, i32 0
	%g_c = getelementptr inbounds i32, i32* @c, i32 0
	%g_get = getelementptr inbounds [10000 x i32], [10000 x i32]* @get, i32 0, i32 0
	%g_get2 = getelementptr inbounds [10000 x i32], [10000 x i32]* @get2, i32 0, i32 0
	br label %_b0
_b0: ; preds = 
	; store 0
	store i32 0, i32* %g_intt, align 4
	; store 1
	store i32 0, i32* %g_chat, align 4
	; getelementptr 2
	%_x2 = getelementptr inbounds i32, i32* %g_get, i32 0
	%_x3 = call i32 @getstr(i32 * %_x2)
	%_t4 = alloca i32, align 4
	%_x5 = getelementptr inbounds i32, i32* %_t4, i32 0
	; store 6
	store i32 %_x3, i32* %_x5, align 4
	br label %_b1
_b1: ; preds = %_b0, %_b100
	%_x7 = load i32, i32* %g_i, align 4
	%_x8 = load i32, i32* %_x5, align 4
	%_t9 = icmp slt i32 %_x7, %_x8
	%_x10 = zext i1 %_t9 to i32
	; if %_x10 then _b2 else _b101
	%_t11 = icmp ne i32 %_x10, 0
	br i1 %_t11, label %_b2, label %_b101
_b2: ; preds = %_b1
	%_x12 = load i32, i32* %g_i, align 4
	; getelementptr 13
	%_t14 = mul i32 %_x12, 1
	%_x13 = getelementptr inbounds i32, i32* %g_get, i32 %_t14
	%_x15 = load i32, i32* %_x13, align 4
	%_x16 = call i32 @isdigit(i32 %_x15)
	%_t17 = icmp eq i32 %_x16, 1
	%_x18 = zext i1 %_t17 to i32
	; if %_x18 then _b3 else _b4
	%_t19 = icmp ne i32 %_x18, 0
	br i1 %_t19, label %_b3, label %_b4
_b3: ; preds = %_b2
	%_x20 = load i32, i32* %g_ii, align 4
	; getelementptr 21
	%_t22 = mul i32 %_x20, 1
	%_x21 = getelementptr inbounds i32, i32* %g_get2, i32 %_t22
	%_x23 = load i32, i32* %g_i, align 4
	; getelementptr 24
	%_t25 = mul i32 %_x23, 1
	%_x24 = getelementptr inbounds i32, i32* %g_get, i32 %_t25
	%_x26 = load i32, i32* %_x24, align 4
	; store 27
	store i32 %_x26, i32* %_x21, align 4
	%_x28 = load i32, i32* %g_ii, align 4
	%_x29 = add i32 %_x28, 1
	; store 30
	store i32 %_x29, i32* %g_ii, align 4
	br label %_b100
_b4: ; preds = %_b2
	%_x31 = load i32, i32* %g_i, align 4
	; getelementptr 32
	%_t33 = mul i32 %_x31, 1
	%_x32 = getelementptr inbounds i32, i32* %g_get, i32 %_t33
	%_x34 = load i32, i32* %_x32, align 4
	%_t35 = icmp eq i32 %_x34, 40
	%_x36 = zext i1 %_t35 to i32
	; if %_x36 then _b5 else _b6
	%_t37 = icmp ne i32 %_x36, 0
	br i1 %_t37, label %_b5, label %_b6
_b5: ; preds = %_b4
	call void @chapush(i32 40)
	br label %_b7
_b6: ; preds = %_b4
	br label %_b7
_b7: ; preds = %_b5, %_b6
	%_x38 = load i32, i32* %g_i, align 4
	; getelementptr 39
	%_t40 = mul i32 %_x38, 1
	%_x39 = getelementptr inbounds i32, i32* %g_get, i32 %_t40
	%_x41 = load i32, i32* %_x39, align 4
	%_t42 = icmp eq i32 %_x41, 94
	%_x43 = zext i1 %_t42 to i32
	; if %_x43 then _b8 else _b9
	%_t44 = icmp ne i32 %_x43, 0
	br i1 %_t44, label %_b8, label %_b9
_b8: ; preds = %_b7
	call void @chapush(i32 94)
	br label %_b10
_b9: ; preds = %_b7
	br label %_b10
_b10: ; preds = %_b8, %_b9
	%_x45 = load i32, i32* %g_i, align 4
	; getelementptr 46
	%_t47 = mul i32 %_x45, 1
	%_x46 = getelementptr inbounds i32, i32* %g_get, i32 %_t47
	%_x48 = load i32, i32* %_x46, align 4
	%_t49 = icmp eq i32 %_x48, 41
	%_x50 = zext i1 %_t49 to i32
	; if %_x50 then _b11 else _b15
	%_t51 = icmp ne i32 %_x50, 0
	br i1 %_t51, label %_b11, label %_b15
_b11: ; preds = %_b10
	%_x52 = call i32 @chapop()
	; store 53
	store i32 %_x52, i32* %g_c, align 4
	br label %_b12
_b12: ; preds = %_b11, %_b13
	%_x54 = load i32, i32* %g_c, align 4
	%_t55 = icmp ne i32 %_x54, 40
	%_x56 = zext i1 %_t55 to i32
	; if %_x56 then _b13 else _b14
	%_t57 = icmp ne i32 %_x56, 0
	br i1 %_t57, label %_b13, label %_b14
_b13: ; preds = %_b12
	%_x58 = load i32, i32* %g_ii, align 4
	; getelementptr 59
	%_t60 = mul i32 %_x58, 1
	%_x59 = getelementptr inbounds i32, i32* %g_get2, i32 %_t60
	; store 61
	store i32 32, i32* %_x59, align 4
	%_x62 = load i32, i32* %g_ii, align 4
	%_x63 = add i32 %_x62, 1
	; getelementptr 64
	%_t65 = mul i32 %_x63, 1
	%_x64 = getelementptr inbounds i32, i32* %g_get2, i32 %_t65
	%_x66 = load i32, i32* %g_c, align 4
	; store 67
	store i32 %_x66, i32* %_x64, align 4
	%_x68 = load i32, i32* %g_ii, align 4
	%_x69 = add i32 %_x68, 2
	; store 70
	store i32 %_x69, i32* %g_ii, align 4
	%_x71 = call i32 @chapop()
	; store 72
	store i32 %_x71, i32* %g_c, align 4
	br label %_b12
_b14: ; preds = %_b12
	br label %_b16
_b15: ; preds = %_b10
	br label %_b16
_b16: ; preds = %_b14, %_b15
	%_x73 = load i32, i32* %g_i, align 4
	; getelementptr 74
	%_t75 = mul i32 %_x73, 1
	%_x74 = getelementptr inbounds i32, i32* %g_get, i32 %_t75
	%_x76 = load i32, i32* %_x74, align 4
	%_t77 = icmp eq i32 %_x76, 43
	%_x78 = zext i1 %_t77 to i32
	; if %_x78 then _b17 else _b34
	%_t79 = icmp ne i32 %_x78, 0
	br i1 %_t79, label %_b17, label %_b34
_b17: ; preds = %_b16
	br label %_b18
_b18: ; preds = %_b17, %_b32
	%_x80 = load i32, i32* %g_chat, align 4
	; getelementptr 81
	%_t82 = mul i32 %_x80, 1
	%_x81 = getelementptr inbounds i32, i32* %g_chas, i32 %_t82
	%_x83 = load i32, i32* %_x81, align 4
	%_t84 = icmp eq i32 %_x83, 43
	%_x85 = zext i1 %_t84 to i32
	%_t86 = icmp eq i32 %_x85, 0
	%_x87 = zext i1 %_t86 to i32
	; if %_x87 then _b19 else _b20
	%_t88 = icmp ne i32 %_x87, 0
	br i1 %_t88, label %_b19, label %_b20
_b19: ; preds = %_b18
	%_x89 = load i32, i32* %g_chat, align 4
	; getelementptr 90
	%_t91 = mul i32 %_x89, 1
	%_x90 = getelementptr inbounds i32, i32* %g_chas, i32 %_t91
	%_x92 = load i32, i32* %_x90, align 4
	%_t93 = icmp eq i32 %_x92, 45
	%_x94 = zext i1 %_t93 to i32
	br label %_b20
_b20: ; preds = %_b18, %_b19
	%_x95 = phi i32 [%_x85, %_b18], [%_x94, %_b19]
	%_t96 = icmp eq i32 %_x95, 0
	%_x97 = zext i1 %_t96 to i32
	; if %_x97 then _b21 else _b22
	%_t98 = icmp ne i32 %_x97, 0
	br i1 %_t98, label %_b21, label %_b22
_b21: ; preds = %_b20
	%_x99 = load i32, i32* %g_chat, align 4
	; getelementptr 100
	%_t101 = mul i32 %_x99, 1
	%_x100 = getelementptr inbounds i32, i32* %g_chas, i32 %_t101
	%_x102 = load i32, i32* %_x100, align 4
	%_t103 = icmp eq i32 %_x102, 42
	%_x104 = zext i1 %_t103 to i32
	br label %_b22
_b22: ; preds = %_b20, %_b21
	%_x105 = phi i32 [%_x95, %_b20], [%_x104, %_b21]
	%_t106 = icmp eq i32 %_x105, 0
	%_x107 = zext i1 %_t106 to i32
	; if %_x107 then _b23 else _b24
	%_t108 = icmp ne i32 %_x107, 0
	br i1 %_t108, label %_b23, label %_b24
_b23: ; preds = %_b22
	%_x109 = load i32, i32* %g_chat, align 4
	; getelementptr 110
	%_t111 = mul i32 %_x109, 1
	%_x110 = getelementptr inbounds i32, i32* %g_chas, i32 %_t111
	%_x112 = load i32, i32* %_x110, align 4
	%_t113 = icmp eq i32 %_x112, 47
	%_x114 = zext i1 %_t113 to i32
	br label %_b24
_b24: ; preds = %_b22, %_b23
	%_x115 = phi i32 [%_x105, %_b22], [%_x114, %_b23]
	%_t116 = icmp eq i32 %_x115, 0
	%_x117 = zext i1 %_t116 to i32
	; if %_x117 then _b25 else _b26
	%_t118 = icmp ne i32 %_x117, 0
	br i1 %_t118, label %_b25, label %_b26
_b25: ; preds = %_b24
	%_x119 = load i32, i32* %g_chat, align 4
	; getelementptr 120
	%_t121 = mul i32 %_x119, 1
	%_x120 = getelementptr inbounds i32, i32* %g_chas, i32 %_t121
	%_x122 = load i32, i32* %_x120, align 4
	%_t123 = icmp eq i32 %_x122, 37
	%_x124 = zext i1 %_t123 to i32
	br label %_b26
_b26: ; preds = %_b24, %_b25
	%_x125 = phi i32 [%_x115, %_b24], [%_x124, %_b25]
	%_t126 = icmp eq i32 %_x125, 0
	%_x127 = zext i1 %_t126 to i32
	; if %_x127 then _b27 else _b28
	%_t128 = icmp ne i32 %_x127, 0
	br i1 %_t128, label %_b27, label %_b28
_b27: ; preds = %_b26
	%_x129 = load i32, i32* %g_chat, align 4
	; getelementptr 130
	%_t131 = mul i32 %_x129, 1
	%_x130 = getelementptr inbounds i32, i32* %g_chas, i32 %_t131
	%_x132 = load i32, i32* %_x130, align 4
	%_t133 = icmp eq i32 %_x132, 94
	%_x134 = zext i1 %_t133 to i32
	br label %_b28
_b28: ; preds = %_b26, %_b27
	%_x135 = phi i32 [%_x125, %_b26], [%_x134, %_b27]
	; if %_x135 then _b29 else _b33
	%_t136 = icmp ne i32 %_x135, 0
	br i1 %_t136, label %_b29, label %_b33
_b29: ; preds = %_b28
	%_x137 = call i32 @find()
	%_t138 = icmp eq i32 %_x137, 0
	%_x139 = zext i1 %_t138 to i32
	; if %_x139 then _b30 else _b31
	%_t140 = icmp ne i32 %_x139, 0
	br i1 %_t140, label %_b30, label %_b31
_b30: ; preds = %_b29
	br label %_b33
_b31: ; preds = %_b29
	br label %_b32
_b32: ; preds = %_b31
	br label %_b18
_b33: ; preds = %_b28, %_b30
	call void @chapush(i32 43)
	br label %_b35
_b34: ; preds = %_b16
	br label %_b35
_b35: ; preds = %_b33, %_b34
	%_x141 = load i32, i32* %g_i, align 4
	; getelementptr 142
	%_t143 = mul i32 %_x141, 1
	%_x142 = getelementptr inbounds i32, i32* %g_get, i32 %_t143
	%_x144 = load i32, i32* %_x142, align 4
	%_t145 = icmp eq i32 %_x144, 45
	%_x146 = zext i1 %_t145 to i32
	; if %_x146 then _b36 else _b53
	%_t147 = icmp ne i32 %_x146, 0
	br i1 %_t147, label %_b36, label %_b53
_b36: ; preds = %_b35
	br label %_b37
_b37: ; preds = %_b36, %_b51
	%_x148 = load i32, i32* %g_chat, align 4
	; getelementptr 149
	%_t150 = mul i32 %_x148, 1
	%_x149 = getelementptr inbounds i32, i32* %g_chas, i32 %_t150
	%_x151 = load i32, i32* %_x149, align 4
	%_t152 = icmp eq i32 %_x151, 43
	%_x153 = zext i1 %_t152 to i32
	%_t154 = icmp eq i32 %_x153, 0
	%_x155 = zext i1 %_t154 to i32
	; if %_x155 then _b38 else _b39
	%_t156 = icmp ne i32 %_x155, 0
	br i1 %_t156, label %_b38, label %_b39
_b38: ; preds = %_b37
	%_x157 = load i32, i32* %g_chat, align 4
	; getelementptr 158
	%_t159 = mul i32 %_x157, 1
	%_x158 = getelementptr inbounds i32, i32* %g_chas, i32 %_t159
	%_x160 = load i32, i32* %_x158, align 4
	%_t161 = icmp eq i32 %_x160, 45
	%_x162 = zext i1 %_t161 to i32
	br label %_b39
_b39: ; preds = %_b37, %_b38
	%_x163 = phi i32 [%_x153, %_b37], [%_x162, %_b38]
	%_t164 = icmp eq i32 %_x163, 0
	%_x165 = zext i1 %_t164 to i32
	; if %_x165 then _b40 else _b41
	%_t166 = icmp ne i32 %_x165, 0
	br i1 %_t166, label %_b40, label %_b41
_b40: ; preds = %_b39
	%_x167 = load i32, i32* %g_chat, align 4
	; getelementptr 168
	%_t169 = mul i32 %_x167, 1
	%_x168 = getelementptr inbounds i32, i32* %g_chas, i32 %_t169
	%_x170 = load i32, i32* %_x168, align 4
	%_t171 = icmp eq i32 %_x170, 42
	%_x172 = zext i1 %_t171 to i32
	br label %_b41
_b41: ; preds = %_b39, %_b40
	%_x173 = phi i32 [%_x163, %_b39], [%_x172, %_b40]
	%_t174 = icmp eq i32 %_x173, 0
	%_x175 = zext i1 %_t174 to i32
	; if %_x175 then _b42 else _b43
	%_t176 = icmp ne i32 %_x175, 0
	br i1 %_t176, label %_b42, label %_b43
_b42: ; preds = %_b41
	%_x177 = load i32, i32* %g_chat, align 4
	; getelementptr 178
	%_t179 = mul i32 %_x177, 1
	%_x178 = getelementptr inbounds i32, i32* %g_chas, i32 %_t179
	%_x180 = load i32, i32* %_x178, align 4
	%_t181 = icmp eq i32 %_x180, 47
	%_x182 = zext i1 %_t181 to i32
	br label %_b43
_b43: ; preds = %_b41, %_b42
	%_x183 = phi i32 [%_x173, %_b41], [%_x182, %_b42]
	%_t184 = icmp eq i32 %_x183, 0
	%_x185 = zext i1 %_t184 to i32
	; if %_x185 then _b44 else _b45
	%_t186 = icmp ne i32 %_x185, 0
	br i1 %_t186, label %_b44, label %_b45
_b44: ; preds = %_b43
	%_x187 = load i32, i32* %g_chat, align 4
	; getelementptr 188
	%_t189 = mul i32 %_x187, 1
	%_x188 = getelementptr inbounds i32, i32* %g_chas, i32 %_t189
	%_x190 = load i32, i32* %_x188, align 4
	%_t191 = icmp eq i32 %_x190, 37
	%_x192 = zext i1 %_t191 to i32
	br label %_b45
_b45: ; preds = %_b43, %_b44
	%_x193 = phi i32 [%_x183, %_b43], [%_x192, %_b44]
	%_t194 = icmp eq i32 %_x193, 0
	%_x195 = zext i1 %_t194 to i32
	; if %_x195 then _b46 else _b47
	%_t196 = icmp ne i32 %_x195, 0
	br i1 %_t196, label %_b46, label %_b47
_b46: ; preds = %_b45
	%_x197 = load i32, i32* %g_chat, align 4
	; getelementptr 198
	%_t199 = mul i32 %_x197, 1
	%_x198 = getelementptr inbounds i32, i32* %g_chas, i32 %_t199
	%_x200 = load i32, i32* %_x198, align 4
	%_t201 = icmp eq i32 %_x200, 94
	%_x202 = zext i1 %_t201 to i32
	br label %_b47
_b47: ; preds = %_b45, %_b46
	%_x203 = phi i32 [%_x193, %_b45], [%_x202, %_b46]
	; if %_x203 then _b48 else _b52
	%_t204 = icmp ne i32 %_x203, 0
	br i1 %_t204, label %_b48, label %_b52
_b48: ; preds = %_b47
	%_x205 = call i32 @find()
	%_t206 = icmp eq i32 %_x205, 0
	%_x207 = zext i1 %_t206 to i32
	; if %_x207 then _b49 else _b50
	%_t208 = icmp ne i32 %_x207, 0
	br i1 %_t208, label %_b49, label %_b50
_b49: ; preds = %_b48
	br label %_b52
_b50: ; preds = %_b48
	br label %_b51
_b51: ; preds = %_b50
	br label %_b37
_b52: ; preds = %_b47, %_b49
	call void @chapush(i32 45)
	br label %_b54
_b53: ; preds = %_b35
	br label %_b54
_b54: ; preds = %_b52, %_b53
	%_x209 = load i32, i32* %g_i, align 4
	; getelementptr 210
	%_t211 = mul i32 %_x209, 1
	%_x210 = getelementptr inbounds i32, i32* %g_get, i32 %_t211
	%_x212 = load i32, i32* %_x210, align 4
	%_t213 = icmp eq i32 %_x212, 42
	%_x214 = zext i1 %_t213 to i32
	; if %_x214 then _b55 else _b68
	%_t215 = icmp ne i32 %_x214, 0
	br i1 %_t215, label %_b55, label %_b68
_b55: ; preds = %_b54
	br label %_b56
_b56: ; preds = %_b55, %_b66
	%_x216 = load i32, i32* %g_chat, align 4
	; getelementptr 217
	%_t218 = mul i32 %_x216, 1
	%_x217 = getelementptr inbounds i32, i32* %g_chas, i32 %_t218
	%_x219 = load i32, i32* %_x217, align 4
	%_t220 = icmp eq i32 %_x219, 42
	%_x221 = zext i1 %_t220 to i32
	%_t222 = icmp eq i32 %_x221, 0
	%_x223 = zext i1 %_t222 to i32
	; if %_x223 then _b57 else _b58
	%_t224 = icmp ne i32 %_x223, 0
	br i1 %_t224, label %_b57, label %_b58
_b57: ; preds = %_b56
	%_x225 = load i32, i32* %g_chat, align 4
	; getelementptr 226
	%_t227 = mul i32 %_x225, 1
	%_x226 = getelementptr inbounds i32, i32* %g_chas, i32 %_t227
	%_x228 = load i32, i32* %_x226, align 4
	%_t229 = icmp eq i32 %_x228, 47
	%_x230 = zext i1 %_t229 to i32
	br label %_b58
_b58: ; preds = %_b56, %_b57
	%_x231 = phi i32 [%_x221, %_b56], [%_x230, %_b57]
	%_t232 = icmp eq i32 %_x231, 0
	%_x233 = zext i1 %_t232 to i32
	; if %_x233 then _b59 else _b60
	%_t234 = icmp ne i32 %_x233, 0
	br i1 %_t234, label %_b59, label %_b60
_b59: ; preds = %_b58
	%_x235 = load i32, i32* %g_chat, align 4
	; getelementptr 236
	%_t237 = mul i32 %_x235, 1
	%_x236 = getelementptr inbounds i32, i32* %g_chas, i32 %_t237
	%_x238 = load i32, i32* %_x236, align 4
	%_t239 = icmp eq i32 %_x238, 37
	%_x240 = zext i1 %_t239 to i32
	br label %_b60
_b60: ; preds = %_b58, %_b59
	%_x241 = phi i32 [%_x231, %_b58], [%_x240, %_b59]
	%_t242 = icmp eq i32 %_x241, 0
	%_x243 = zext i1 %_t242 to i32
	; if %_x243 then _b61 else _b62
	%_t244 = icmp ne i32 %_x243, 0
	br i1 %_t244, label %_b61, label %_b62
_b61: ; preds = %_b60
	%_x245 = load i32, i32* %g_chat, align 4
	; getelementptr 246
	%_t247 = mul i32 %_x245, 1
	%_x246 = getelementptr inbounds i32, i32* %g_chas, i32 %_t247
	%_x248 = load i32, i32* %_x246, align 4
	%_t249 = icmp eq i32 %_x248, 94
	%_x250 = zext i1 %_t249 to i32
	br label %_b62
_b62: ; preds = %_b60, %_b61
	%_x251 = phi i32 [%_x241, %_b60], [%_x250, %_b61]
	; if %_x251 then _b63 else _b67
	%_t252 = icmp ne i32 %_x251, 0
	br i1 %_t252, label %_b63, label %_b67
_b63: ; preds = %_b62
	%_x253 = call i32 @find()
	%_t254 = icmp eq i32 %_x253, 0
	%_x255 = zext i1 %_t254 to i32
	; if %_x255 then _b64 else _b65
	%_t256 = icmp ne i32 %_x255, 0
	br i1 %_t256, label %_b64, label %_b65
_b64: ; preds = %_b63
	br label %_b67
_b65: ; preds = %_b63
	br label %_b66
_b66: ; preds = %_b65
	br label %_b56
_b67: ; preds = %_b62, %_b64
	call void @chapush(i32 42)
	br label %_b69
_b68: ; preds = %_b54
	br label %_b69
_b69: ; preds = %_b67, %_b68
	%_x257 = load i32, i32* %g_i, align 4
	; getelementptr 258
	%_t259 = mul i32 %_x257, 1
	%_x258 = getelementptr inbounds i32, i32* %g_get, i32 %_t259
	%_x260 = load i32, i32* %_x258, align 4
	%_t261 = icmp eq i32 %_x260, 47
	%_x262 = zext i1 %_t261 to i32
	; if %_x262 then _b70 else _b83
	%_t263 = icmp ne i32 %_x262, 0
	br i1 %_t263, label %_b70, label %_b83
_b70: ; preds = %_b69
	br label %_b71
_b71: ; preds = %_b70, %_b81
	%_x264 = load i32, i32* %g_chat, align 4
	; getelementptr 265
	%_t266 = mul i32 %_x264, 1
	%_x265 = getelementptr inbounds i32, i32* %g_chas, i32 %_t266
	%_x267 = load i32, i32* %_x265, align 4
	%_t268 = icmp eq i32 %_x267, 42
	%_x269 = zext i1 %_t268 to i32
	%_t270 = icmp eq i32 %_x269, 0
	%_x271 = zext i1 %_t270 to i32
	; if %_x271 then _b72 else _b73
	%_t272 = icmp ne i32 %_x271, 0
	br i1 %_t272, label %_b72, label %_b73
_b72: ; preds = %_b71
	%_x273 = load i32, i32* %g_chat, align 4
	; getelementptr 274
	%_t275 = mul i32 %_x273, 1
	%_x274 = getelementptr inbounds i32, i32* %g_chas, i32 %_t275
	%_x276 = load i32, i32* %_x274, align 4
	%_t277 = icmp eq i32 %_x276, 47
	%_x278 = zext i1 %_t277 to i32
	br label %_b73
_b73: ; preds = %_b71, %_b72
	%_x279 = phi i32 [%_x269, %_b71], [%_x278, %_b72]
	%_t280 = icmp eq i32 %_x279, 0
	%_x281 = zext i1 %_t280 to i32
	; if %_x281 then _b74 else _b75
	%_t282 = icmp ne i32 %_x281, 0
	br i1 %_t282, label %_b74, label %_b75
_b74: ; preds = %_b73
	%_x283 = load i32, i32* %g_chat, align 4
	; getelementptr 284
	%_t285 = mul i32 %_x283, 1
	%_x284 = getelementptr inbounds i32, i32* %g_chas, i32 %_t285
	%_x286 = load i32, i32* %_x284, align 4
	%_t287 = icmp eq i32 %_x286, 37
	%_x288 = zext i1 %_t287 to i32
	br label %_b75
_b75: ; preds = %_b73, %_b74
	%_x289 = phi i32 [%_x279, %_b73], [%_x288, %_b74]
	%_t290 = icmp eq i32 %_x289, 0
	%_x291 = zext i1 %_t290 to i32
	; if %_x291 then _b76 else _b77
	%_t292 = icmp ne i32 %_x291, 0
	br i1 %_t292, label %_b76, label %_b77
_b76: ; preds = %_b75
	%_x293 = load i32, i32* %g_chat, align 4
	; getelementptr 294
	%_t295 = mul i32 %_x293, 1
	%_x294 = getelementptr inbounds i32, i32* %g_chas, i32 %_t295
	%_x296 = load i32, i32* %_x294, align 4
	%_t297 = icmp eq i32 %_x296, 94
	%_x298 = zext i1 %_t297 to i32
	br label %_b77
_b77: ; preds = %_b75, %_b76
	%_x299 = phi i32 [%_x289, %_b75], [%_x298, %_b76]
	; if %_x299 then _b78 else _b82
	%_t300 = icmp ne i32 %_x299, 0
	br i1 %_t300, label %_b78, label %_b82
_b78: ; preds = %_b77
	%_x301 = call i32 @find()
	%_t302 = icmp eq i32 %_x301, 0
	%_x303 = zext i1 %_t302 to i32
	; if %_x303 then _b79 else _b80
	%_t304 = icmp ne i32 %_x303, 0
	br i1 %_t304, label %_b79, label %_b80
_b79: ; preds = %_b78
	br label %_b82
_b80: ; preds = %_b78
	br label %_b81
_b81: ; preds = %_b80
	br label %_b71
_b82: ; preds = %_b77, %_b79
	call void @chapush(i32 47)
	br label %_b84
_b83: ; preds = %_b69
	br label %_b84
_b84: ; preds = %_b82, %_b83
	%_x305 = load i32, i32* %g_i, align 4
	; getelementptr 306
	%_t307 = mul i32 %_x305, 1
	%_x306 = getelementptr inbounds i32, i32* %g_get, i32 %_t307
	%_x308 = load i32, i32* %_x306, align 4
	%_t309 = icmp eq i32 %_x308, 37
	%_x310 = zext i1 %_t309 to i32
	; if %_x310 then _b85 else _b98
	%_t311 = icmp ne i32 %_x310, 0
	br i1 %_t311, label %_b85, label %_b98
_b85: ; preds = %_b84
	br label %_b86
_b86: ; preds = %_b85, %_b96
	%_x312 = load i32, i32* %g_chat, align 4
	; getelementptr 313
	%_t314 = mul i32 %_x312, 1
	%_x313 = getelementptr inbounds i32, i32* %g_chas, i32 %_t314
	%_x315 = load i32, i32* %_x313, align 4
	%_t316 = icmp eq i32 %_x315, 42
	%_x317 = zext i1 %_t316 to i32
	%_t318 = icmp eq i32 %_x317, 0
	%_x319 = zext i1 %_t318 to i32
	; if %_x319 then _b87 else _b88
	%_t320 = icmp ne i32 %_x319, 0
	br i1 %_t320, label %_b87, label %_b88
_b87: ; preds = %_b86
	%_x321 = load i32, i32* %g_chat, align 4
	; getelementptr 322
	%_t323 = mul i32 %_x321, 1
	%_x322 = getelementptr inbounds i32, i32* %g_chas, i32 %_t323
	%_x324 = load i32, i32* %_x322, align 4
	%_t325 = icmp eq i32 %_x324, 47
	%_x326 = zext i1 %_t325 to i32
	br label %_b88
_b88: ; preds = %_b86, %_b87
	%_x327 = phi i32 [%_x317, %_b86], [%_x326, %_b87]
	%_t328 = icmp eq i32 %_x327, 0
	%_x329 = zext i1 %_t328 to i32
	; if %_x329 then _b89 else _b90
	%_t330 = icmp ne i32 %_x329, 0
	br i1 %_t330, label %_b89, label %_b90
_b89: ; preds = %_b88
	%_x331 = load i32, i32* %g_chat, align 4
	; getelementptr 332
	%_t333 = mul i32 %_x331, 1
	%_x332 = getelementptr inbounds i32, i32* %g_chas, i32 %_t333
	%_x334 = load i32, i32* %_x332, align 4
	%_t335 = icmp eq i32 %_x334, 37
	%_x336 = zext i1 %_t335 to i32
	br label %_b90
_b90: ; preds = %_b88, %_b89
	%_x337 = phi i32 [%_x327, %_b88], [%_x336, %_b89]
	%_t338 = icmp eq i32 %_x337, 0
	%_x339 = zext i1 %_t338 to i32
	; if %_x339 then _b91 else _b92
	%_t340 = icmp ne i32 %_x339, 0
	br i1 %_t340, label %_b91, label %_b92
_b91: ; preds = %_b90
	%_x341 = load i32, i32* %g_chat, align 4
	; getelementptr 342
	%_t343 = mul i32 %_x341, 1
	%_x342 = getelementptr inbounds i32, i32* %g_chas, i32 %_t343
	%_x344 = load i32, i32* %_x342, align 4
	%_t345 = icmp eq i32 %_x344, 94
	%_x346 = zext i1 %_t345 to i32
	br label %_b92
_b92: ; preds = %_b90, %_b91
	%_x347 = phi i32 [%_x337, %_b90], [%_x346, %_b91]
	; if %_x347 then _b93 else _b97
	%_t348 = icmp ne i32 %_x347, 0
	br i1 %_t348, label %_b93, label %_b97
_b93: ; preds = %_b92
	%_x349 = call i32 @find()
	%_t350 = icmp eq i32 %_x349, 0
	%_x351 = zext i1 %_t350 to i32
	; if %_x351 then _b94 else _b95
	%_t352 = icmp ne i32 %_x351, 0
	br i1 %_t352, label %_b94, label %_b95
_b94: ; preds = %_b93
	br label %_b97
_b95: ; preds = %_b93
	br label %_b96
_b96: ; preds = %_b95
	br label %_b86
_b97: ; preds = %_b92, %_b94
	call void @chapush(i32 37)
	br label %_b99
_b98: ; preds = %_b84
	br label %_b99
_b99: ; preds = %_b97, %_b98
	%_x353 = load i32, i32* %g_ii, align 4
	; getelementptr 354
	%_t355 = mul i32 %_x353, 1
	%_x354 = getelementptr inbounds i32, i32* %g_get2, i32 %_t355
	; store 356
	store i32 32, i32* %_x354, align 4
	%_x357 = load i32, i32* %g_ii, align 4
	%_x358 = add i32 %_x357, 1
	; store 359
	store i32 %_x358, i32* %g_ii, align 4
	br label %_b100
_b100: ; preds = %_b3, %_b99
	%_x360 = load i32, i32* %g_i, align 4
	%_x361 = add i32 %_x360, 1
	; store 362
	store i32 %_x361, i32* %g_i, align 4
	br label %_b1
_b101: ; preds = %_b1
	br label %_b102
_b102: ; preds = %_b101, %_b103
	%_x363 = load i32, i32* %g_chat, align 4
	%_t364 = icmp sgt i32 %_x363, 0
	%_x365 = zext i1 %_t364 to i32
	; if %_x365 then _b103 else _b104
	%_t366 = icmp ne i32 %_x365, 0
	br i1 %_t366, label %_b103, label %_b104
_b103: ; preds = %_b102
	%_x367 = call i32 @chapop()
	%_t368 = alloca i32, align 4
	%_x369 = getelementptr inbounds i32, i32* %_t368, i32 0
	; store 370
	store i32 %_x367, i32* %_x369, align 4
	%_x371 = load i32, i32* %g_ii, align 4
	; getelementptr 372
	%_t373 = mul i32 %_x371, 1
	%_x372 = getelementptr inbounds i32, i32* %g_get2, i32 %_t373
	; store 374
	store i32 32, i32* %_x372, align 4
	%_x375 = load i32, i32* %g_ii, align 4
	%_x376 = add i32 %_x375, 1
	; getelementptr 377
	%_t378 = mul i32 %_x376, 1
	%_x377 = getelementptr inbounds i32, i32* %g_get2, i32 %_t378
	%_x379 = load i32, i32* %_x369, align 4
	; store 380
	store i32 %_x379, i32* %_x377, align 4
	%_x381 = load i32, i32* %g_ii, align 4
	%_x382 = add i32 %_x381, 2
	; store 383
	store i32 %_x382, i32* %g_ii, align 4
	br label %_b102
_b104: ; preds = %_b102
	%_x384 = load i32, i32* %g_ii, align 4
	; getelementptr 385
	%_t386 = mul i32 %_x384, 1
	%_x385 = getelementptr inbounds i32, i32* %g_get2, i32 %_t386
	; store 387
	store i32 64, i32* %_x385, align 4
	; store 388
	store i32 1, i32* %g_i, align 4
	br label %_b105
_b105: ; preds = %_b104, %_b143
	%_x389 = load i32, i32* %g_i, align 4
	; getelementptr 390
	%_t391 = mul i32 %_x389, 1
	%_x390 = getelementptr inbounds i32, i32* %g_get2, i32 %_t391
	%_x392 = load i32, i32* %_x390, align 4
	%_t393 = icmp ne i32 %_x392, 64
	%_x394 = zext i1 %_t393 to i32
	; if %_x394 then _b106 else _b144
	%_t395 = icmp ne i32 %_x394, 0
	br i1 %_t395, label %_b106, label %_b144
_b106: ; preds = %_b105
	%_x396 = load i32, i32* %g_i, align 4
	; getelementptr 397
	%_t398 = mul i32 %_x396, 1
	%_x397 = getelementptr inbounds i32, i32* %g_get2, i32 %_t398
	%_x399 = load i32, i32* %_x397, align 4
	%_t400 = icmp eq i32 %_x399, 43
	%_x401 = zext i1 %_t400 to i32
	%_t402 = icmp eq i32 %_x401, 0
	%_x403 = zext i1 %_t402 to i32
	; if %_x403 then _b107 else _b108
	%_t404 = icmp ne i32 %_x403, 0
	br i1 %_t404, label %_b107, label %_b108
_b107: ; preds = %_b106
	%_x405 = load i32, i32* %g_i, align 4
	; getelementptr 406
	%_t407 = mul i32 %_x405, 1
	%_x406 = getelementptr inbounds i32, i32* %g_get2, i32 %_t407
	%_x408 = load i32, i32* %_x406, align 4
	%_t409 = icmp eq i32 %_x408, 45
	%_x410 = zext i1 %_t409 to i32
	br label %_b108
_b108: ; preds = %_b106, %_b107
	%_x411 = phi i32 [%_x401, %_b106], [%_x410, %_b107]
	%_t412 = icmp eq i32 %_x411, 0
	%_x413 = zext i1 %_t412 to i32
	; if %_x413 then _b109 else _b110
	%_t414 = icmp ne i32 %_x413, 0
	br i1 %_t414, label %_b109, label %_b110
_b109: ; preds = %_b108
	%_x415 = load i32, i32* %g_i, align 4
	; getelementptr 416
	%_t417 = mul i32 %_x415, 1
	%_x416 = getelementptr inbounds i32, i32* %g_get2, i32 %_t417
	%_x418 = load i32, i32* %_x416, align 4
	%_t419 = icmp eq i32 %_x418, 42
	%_x420 = zext i1 %_t419 to i32
	br label %_b110
_b110: ; preds = %_b108, %_b109
	%_x421 = phi i32 [%_x411, %_b108], [%_x420, %_b109]
	%_t422 = icmp eq i32 %_x421, 0
	%_x423 = zext i1 %_t422 to i32
	; if %_x423 then _b111 else _b112
	%_t424 = icmp ne i32 %_x423, 0
	br i1 %_t424, label %_b111, label %_b112
_b111: ; preds = %_b110
	%_x425 = load i32, i32* %g_i, align 4
	; getelementptr 426
	%_t427 = mul i32 %_x425, 1
	%_x426 = getelementptr inbounds i32, i32* %g_get2, i32 %_t427
	%_x428 = load i32, i32* %_x426, align 4
	%_t429 = icmp eq i32 %_x428, 47
	%_x430 = zext i1 %_t429 to i32
	br label %_b112
_b112: ; preds = %_b110, %_b111
	%_x431 = phi i32 [%_x421, %_b110], [%_x430, %_b111]
	%_t432 = icmp eq i32 %_x431, 0
	%_x433 = zext i1 %_t432 to i32
	; if %_x433 then _b113 else _b114
	%_t434 = icmp ne i32 %_x433, 0
	br i1 %_t434, label %_b113, label %_b114
_b113: ; preds = %_b112
	%_x435 = load i32, i32* %g_i, align 4
	; getelementptr 436
	%_t437 = mul i32 %_x435, 1
	%_x436 = getelementptr inbounds i32, i32* %g_get2, i32 %_t437
	%_x438 = load i32, i32* %_x436, align 4
	%_t439 = icmp eq i32 %_x438, 37
	%_x440 = zext i1 %_t439 to i32
	br label %_b114
_b114: ; preds = %_b112, %_b113
	%_x441 = phi i32 [%_x431, %_b112], [%_x440, %_b113]
	%_t442 = icmp eq i32 %_x441, 0
	%_x443 = zext i1 %_t442 to i32
	; if %_x443 then _b115 else _b116
	%_t444 = icmp ne i32 %_x443, 0
	br i1 %_t444, label %_b115, label %_b116
_b115: ; preds = %_b114
	%_x445 = load i32, i32* %g_i, align 4
	; getelementptr 446
	%_t447 = mul i32 %_x445, 1
	%_x446 = getelementptr inbounds i32, i32* %g_get2, i32 %_t447
	%_x448 = load i32, i32* %_x446, align 4
	%_t449 = icmp eq i32 %_x448, 94
	%_x450 = zext i1 %_t449 to i32
	br label %_b116
_b116: ; preds = %_b114, %_b115
	%_x451 = phi i32 [%_x441, %_b114], [%_x450, %_b115]
	; if %_x451 then _b117 else _b136
	%_t452 = icmp ne i32 %_x451, 0
	br i1 %_t452, label %_b117, label %_b136
_b117: ; preds = %_b116
	%_x453 = call i32 @intpop()
	%_t454 = alloca i32, align 4
	%_x455 = getelementptr inbounds i32, i32* %_t454, i32 0
	; store 456
	store i32 %_x453, i32* %_x455, align 4
	%_x457 = call i32 @intpop()
	%_t458 = alloca i32, align 4
	%_x459 = getelementptr inbounds i32, i32* %_t458, i32 0
	; store 460
	store i32 %_x457, i32* %_x459, align 4
	%_t461 = alloca i32, align 4
	%_x462 = getelementptr inbounds i32, i32* %_t461, i32 0
	%_x463 = load i32, i32* %g_i, align 4
	; getelementptr 464
	%_t465 = mul i32 %_x463, 1
	%_x464 = getelementptr inbounds i32, i32* %g_get2, i32 %_t465
	%_x466 = load i32, i32* %_x464, align 4
	%_t467 = icmp eq i32 %_x466, 43
	%_x468 = zext i1 %_t467 to i32
	; if %_x468 then _b118 else _b119
	%_t469 = icmp ne i32 %_x468, 0
	br i1 %_t469, label %_b118, label %_b119
_b118: ; preds = %_b117
	%_x470 = load i32, i32* %_x455, align 4
	%_x471 = load i32, i32* %_x459, align 4
	%_x472 = add i32 %_x470, %_x471
	; store 473
	store i32 %_x472, i32* %_x462, align 4
	br label %_b120
_b119: ; preds = %_b117
	br label %_b120
_b120: ; preds = %_b118, %_b119
	%_x474 = load i32, i32* %g_i, align 4
	; getelementptr 475
	%_t476 = mul i32 %_x474, 1
	%_x475 = getelementptr inbounds i32, i32* %g_get2, i32 %_t476
	%_x477 = load i32, i32* %_x475, align 4
	%_t478 = icmp eq i32 %_x477, 45
	%_x479 = zext i1 %_t478 to i32
	; if %_x479 then _b121 else _b122
	%_t480 = icmp ne i32 %_x479, 0
	br i1 %_t480, label %_b121, label %_b122
_b121: ; preds = %_b120
	%_x481 = load i32, i32* %_x459, align 4
	%_x482 = load i32, i32* %_x455, align 4
	%_x483 = sub i32 %_x481, %_x482
	; store 484
	store i32 %_x483, i32* %_x462, align 4
	br label %_b123
_b122: ; preds = %_b120
	br label %_b123
_b123: ; preds = %_b121, %_b122
	%_x485 = load i32, i32* %g_i, align 4
	; getelementptr 486
	%_t487 = mul i32 %_x485, 1
	%_x486 = getelementptr inbounds i32, i32* %g_get2, i32 %_t487
	%_x488 = load i32, i32* %_x486, align 4
	%_t489 = icmp eq i32 %_x488, 42
	%_x490 = zext i1 %_t489 to i32
	; if %_x490 then _b124 else _b125
	%_t491 = icmp ne i32 %_x490, 0
	br i1 %_t491, label %_b124, label %_b125
_b124: ; preds = %_b123
	%_x492 = load i32, i32* %_x455, align 4
	%_x493 = load i32, i32* %_x459, align 4
	%_x494 = mul i32 %_x492, %_x493
	; store 495
	store i32 %_x494, i32* %_x462, align 4
	br label %_b126
_b125: ; preds = %_b123
	br label %_b126
_b126: ; preds = %_b124, %_b125
	%_x496 = load i32, i32* %g_i, align 4
	; getelementptr 497
	%_t498 = mul i32 %_x496, 1
	%_x497 = getelementptr inbounds i32, i32* %g_get2, i32 %_t498
	%_x499 = load i32, i32* %_x497, align 4
	%_t500 = icmp eq i32 %_x499, 47
	%_x501 = zext i1 %_t500 to i32
	; if %_x501 then _b127 else _b128
	%_t502 = icmp ne i32 %_x501, 0
	br i1 %_t502, label %_b127, label %_b128
_b127: ; preds = %_b126
	%_x503 = load i32, i32* %_x459, align 4
	%_x504 = load i32, i32* %_x455, align 4
	%_x505 = sdiv i32 %_x503, %_x504
	; store 506
	store i32 %_x505, i32* %_x462, align 4
	br label %_b129
_b128: ; preds = %_b126
	br label %_b129
_b129: ; preds = %_b127, %_b128
	%_x507 = load i32, i32* %g_i, align 4
	; getelementptr 508
	%_t509 = mul i32 %_x507, 1
	%_x508 = getelementptr inbounds i32, i32* %g_get2, i32 %_t509
	%_x510 = load i32, i32* %_x508, align 4
	%_t511 = icmp eq i32 %_x510, 37
	%_x512 = zext i1 %_t511 to i32
	; if %_x512 then _b130 else _b131
	%_t513 = icmp ne i32 %_x512, 0
	br i1 %_t513, label %_b130, label %_b131
_b130: ; preds = %_b129
	%_x514 = load i32, i32* %_x459, align 4
	%_x515 = load i32, i32* %_x455, align 4
	%_x516 = srem i32 %_x514, %_x515
	; store 517
	store i32 %_x516, i32* %_x462, align 4
	br label %_b132
_b131: ; preds = %_b129
	br label %_b132
_b132: ; preds = %_b130, %_b131
	%_x518 = load i32, i32* %g_i, align 4
	; getelementptr 519
	%_t520 = mul i32 %_x518, 1
	%_x519 = getelementptr inbounds i32, i32* %g_get2, i32 %_t520
	%_x521 = load i32, i32* %_x519, align 4
	%_t522 = icmp eq i32 %_x521, 94
	%_x523 = zext i1 %_t522 to i32
	; if %_x523 then _b133 else _b134
	%_t524 = icmp ne i32 %_x523, 0
	br i1 %_t524, label %_b133, label %_b134
_b133: ; preds = %_b132
	%_x525 = load i32, i32* %_x459, align 4
	%_x526 = load i32, i32* %_x455, align 4
	%_x527 = call i32 @power(i32 %_x525, i32 %_x526)
	; store 528
	store i32 %_x527, i32* %_x462, align 4
	br label %_b135
_b134: ; preds = %_b132
	br label %_b135
_b135: ; preds = %_b133, %_b134
	%_x529 = load i32, i32* %_x462, align 4
	call void @intpush(i32 %_x529)
	br label %_b143
_b136: ; preds = %_b116
	%_x530 = load i32, i32* %g_i, align 4
	; getelementptr 531
	%_t532 = mul i32 %_x530, 1
	%_x531 = getelementptr inbounds i32, i32* %g_get2, i32 %_t532
	%_x533 = load i32, i32* %_x531, align 4
	%_t534 = icmp ne i32 %_x533, 32
	%_x535 = zext i1 %_t534 to i32
	; if %_x535 then _b137 else _b141
	%_t536 = icmp ne i32 %_x535, 0
	br i1 %_t536, label %_b137, label %_b141
_b137: ; preds = %_b136
	%_x537 = load i32, i32* %g_i, align 4
	; getelementptr 538
	%_t539 = mul i32 %_x537, 1
	%_x538 = getelementptr inbounds i32, i32* %g_get2, i32 %_t539
	%_x540 = load i32, i32* %_x538, align 4
	%_x541 = sub i32 %_x540, 48
	call void @intpush(i32 %_x541)
	; store 542
	store i32 1, i32* %g_ii, align 4
	br label %_b138
_b138: ; preds = %_b137, %_b139
	%_x543 = load i32, i32* %g_i, align 4
	%_x544 = load i32, i32* %g_ii, align 4
	%_x545 = add i32 %_x543, %_x544
	; getelementptr 546
	%_t547 = mul i32 %_x545, 1
	%_x546 = getelementptr inbounds i32, i32* %g_get2, i32 %_t547
	%_x548 = load i32, i32* %_x546, align 4
	%_t549 = icmp ne i32 %_x548, 32
	%_x550 = zext i1 %_t549 to i32
	; if %_x550 then _b139 else _b140
	%_t551 = icmp ne i32 %_x550, 0
	br i1 %_t551, label %_b139, label %_b140
_b139: ; preds = %_b138
	%_x552 = load i32, i32* %g_i, align 4
	%_x553 = load i32, i32* %g_ii, align 4
	%_x554 = add i32 %_x552, %_x553
	; getelementptr 555
	%_t556 = mul i32 %_x554, 1
	%_x555 = getelementptr inbounds i32, i32* %g_get2, i32 %_t556
	%_x557 = load i32, i32* %_x555, align 4
	%_x558 = sub i32 %_x557, 48
	call void @intadd(i32 %_x558)
	%_x559 = load i32, i32* %g_ii, align 4
	%_x560 = add i32 %_x559, 1
	; store 561
	store i32 %_x560, i32* %g_ii, align 4
	br label %_b138
_b140: ; preds = %_b138
	%_x562 = load i32, i32* %g_i, align 4
	%_x563 = load i32, i32* %g_ii, align 4
	%_x564 = add i32 %_x562, %_x563
	%_x565 = sub i32 %_x564, 1
	; store 566
	store i32 %_x565, i32* %g_i, align 4
	br label %_b142
_b141: ; preds = %_b136
	br label %_b142
_b142: ; preds = %_b140, %_b141
	br label %_b143
_b143: ; preds = %_b135, %_b142
	%_x567 = load i32, i32* %g_i, align 4
	%_x568 = add i32 %_x567, 1
	; store 569
	store i32 %_x568, i32* %g_i, align 4
	br label %_b105
_b144: ; preds = %_b105
	; getelementptr 570
	%_x570 = getelementptr inbounds i32, i32* %g_ints, i32 1
	%_x571 = load i32, i32* %_x570, align 4
	call void @putint(i32 %_x571)
	call void @putint(i32 0)
	ret i32 0
}

