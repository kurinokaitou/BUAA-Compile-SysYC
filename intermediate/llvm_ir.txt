@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}
@t = global i32 zeroinitializer

@.str1 = constant [2 x i8] c"\0a\00"

define i32 @writeElement(i32 * %b, i32 %a, i32 %c) #0 {
_entry:
	%g_t = getelementptr inbounds i32, i32* @t, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %a, i32* %_x1, align 4
	%_t3 = alloca i32, align 4
	%_x4 = getelementptr inbounds i32, i32* %_t3, i32 0
	; store 5
	store i32 %c, i32* %_x4, align 4
	%_x6 = load i32, i32* %_x1, align 4
	ret i32 %_x6
}

define i32 @findElement(i32 * %a, i32 %x) #0 {
_entry:
	%g_t = getelementptr inbounds i32, i32* @t, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %x, i32* %_x1, align 4
	%_x3 = load i32, i32* %_x1, align 4
	ret i32 %_x3
}

define void @element(i32 * %a, i32 %x) #0 {
_entry:
	%g_t = getelementptr inbounds i32, i32* @t, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %x, i32* %_x1, align 4
	ret void
}

define i32 @f(i32 * %a, i32 %x) #0 {
_entry:
	%g_t = getelementptr inbounds i32, i32* @t, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca i32, align 4
	%_x1 = getelementptr inbounds i32, i32* %_t0, i32 0
	; store 2
	store i32 %x, i32* %_x1, align 4
	; getelementptr 3
	%_x3 = getelementptr inbounds i32, i32* %a, i32 0
	%_x4 = load i32, i32* %_x1, align 4
	%_x5 = call i32 @findElement(i32 * %_x3, i32 %_x4)
	; store 6
	store i32 %_x5, i32* %g_t, align 4
	%_x7 = load i32, i32* %_x1, align 4
	%_t8 = icmp ne i32 %_x7, 0
	%_x9 = zext i1 %_t8 to i32
	; if %_x9 then _b1 else _b2
	%_t10 = icmp ne i32 %_x9, 0
	br i1 %_t10, label %_b1, label %_b2
_b1: ; preds = %_b0
	%_x11 = load i32, i32* %g_t, align 4
	ret i32 %_x11
_b2: ; preds = %_b0
	; getelementptr 12
	%_x12 = getelementptr inbounds i32, i32* %a, i32 0
	%_x13 = load i32, i32* %_x1, align 4
	%_x14 = sub i32 %_x13, 1
	%_x15 = load i32, i32* %_x1, align 4
	%_x16 = call i32 @writeElement(i32 * %_x12, i32 %_x14, i32 %_x15)
	; getelementptr 17
	%_x17 = getelementptr inbounds i32, i32* %a, i32 0
	%_x18 = load i32, i32* %_x1, align 4
	%_x19 = sub i32 %_x18, 2
	%_x20 = load i32, i32* %_x1, align 4
	%_x21 = call i32 @writeElement(i32 * %_x17, i32 %_x19, i32 %_x20)
	; getelementptr 22
	%_x22 = getelementptr inbounds i32, i32* %a, i32 0
	%_x23 = load i32, i32* %_x1, align 4
	%_x24 = sub i32 %_x23, 2
	%_x25 = call i32 @f(i32 * %_x22, i32 %_x24)
	; getelementptr 26
	%_x26 = getelementptr inbounds i32, i32* %a, i32 0
	%_x27 = load i32, i32* %_x1, align 4
	%_x28 = sub i32 %_x27, 1
	%_x29 = call i32 @f(i32 * %_x26, i32 %_x28)
	%_x30 = add i32 %_x25, %_x29
	ret i32 %_x30
_b3: ; preds = 
	ret i32 0
}

define i32 @main() #0 {
_entry:
	%g_t = getelementptr inbounds i32, i32* @t, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = alloca [2 x i32], align 4
	%_x1 = getelementptr inbounds [2 x i32], [2 x i32]* %_t0, i32 0, i32 0
	; store 2
	store i32 2, i32* %_x1, align 4
	; store 3
	%_t4 = getelementptr inbounds i32, i32* %_x1, i32 1
	store i32 3, i32* %_t4, align 4
	; getelementptr 5
	%_x5 = getelementptr inbounds i32, i32* %_x1, i32 0
	%_x6 = call i32 @f(i32 * %_x5, i32 5)
	call void @putint(i32 %_x6)
	%_t7 = getelementptr inbounds [2 x i8], [2 x i8]* @.str1, i32 0, i32 0
	call void @putstr(i8* %_t7)
	ret i32 0
}

