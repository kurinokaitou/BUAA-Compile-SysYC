@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}
@CONSTANT = constant i32 100

@.str1 = constant [10 x i8] c"20373898\0a\00"
@.str2 = constant [1 x i8] c"\00"
@.str3 = constant [2 x i8] c"\0a\00"
@.str4 = constant [1 x i8] c"\00"
@.str5 = constant [2 x i8] c"\0a\00"
@.str6 = constant [1 x i8] c"\00"
@.str7 = constant [2 x i8] c"\0a\00"
@.str8 = constant [1 x i8] c"\00"
@.str9 = constant [2 x i8] c"\0a\00"
@.str10 = constant [2 x i8] c"\0a\00"
@.str11 = constant [1 x i8] c"\00"
@.str12 = constant [2 x i8] c"\0a\00"
@.str13 = constant [1 x i8] c"\00"
@.str14 = constant [2 x i8] c"\0a\00"
@.str15 = constant [1 x i8] c"\00"
@.str16 = constant [23 x i8] c" !()*+,-./0:;<?@[]~^`\0a\00"

define i32 @fun(i32 * %arr) #0 {
_entry:
	%g_CONSTANT = getelementptr inbounds i32, i32* @CONSTANT, i32 0
	br label %_b0
_b0: ; preds = 
	ret i32 0
}

define i32 @main() #0 {
_entry:
	%g_CONSTANT = getelementptr inbounds i32, i32* @CONSTANT, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = getelementptr inbounds [10 x i8], [10 x i8]* @.str1, i32 0, i32 0
	call void @putstr(i8* %_t0)
	%_t1 = alloca i32, align 4
	%_x2 = getelementptr inbounds i32, i32* %_t1, i32 0
	; store 3
	store i32 0, i32* %_x2, align 4
	%_t4 = alloca i32, align 4
	%_x5 = getelementptr inbounds i32, i32* %_t4, i32 0
	; store 6
	store i32 1, i32* %_x5, align 4
	%_x7 = load i32, i32* %_x5, align 4
	%_t8 = getelementptr inbounds [1 x i8], [1 x i8]* @.str2, i32 0, i32 0
	call void @putstr(i8* %_t8)
	call void @putint(i32 %_x7)
	%_t9 = getelementptr inbounds [2 x i8], [2 x i8]* @.str3, i32 0, i32 0
	call void @putstr(i8* %_t9)
	%_t10 = alloca [5 x i32], align 4
	%_x11 = getelementptr inbounds [5 x i32], [5 x i32]* %_t10, i32 0, i32 0
	%_t12 = alloca [6 x i32], align 4
	%_x13 = getelementptr inbounds [6 x i32], [6 x i32]* %_t12, i32 0, i32 0
	; getelementptr 14
	%_x14 = getelementptr inbounds i32, i32* %_x11, i32 3
	; store 15
	store i32 1, i32* %_x14, align 4
	; getelementptr 16
	%_x16 = getelementptr inbounds i32, i32* %_x13, i32 2
	; getelementptr 17
	%_x17 = getelementptr inbounds i32, i32* %_x16, i32 1
	; store 18
	store i32 1, i32* %_x17, align 4
	; getelementptr 19
	%_x19 = getelementptr inbounds i32, i32* %_x13, i32 4
	; getelementptr 20
	%_x20 = getelementptr inbounds i32, i32* %_x19, i32 1
	; store 21
	store i32 2, i32* %_x20, align 4
	; getelementptr 22
	%_x22 = getelementptr inbounds i32, i32* %_x11, i32 3
	%_x23 = load i32, i32* %_x22, align 4
	%_t24 = getelementptr inbounds [1 x i8], [1 x i8]* @.str4, i32 0, i32 0
	call void @putstr(i8* %_t24)
	call void @putint(i32 %_x23)
	%_t25 = getelementptr inbounds [2 x i8], [2 x i8]* @.str5, i32 0, i32 0
	call void @putstr(i8* %_t25)
	; getelementptr 26
	%_x26 = getelementptr inbounds i32, i32* %_x13, i32 2
	; getelementptr 27
	%_x27 = getelementptr inbounds i32, i32* %_x26, i32 1
	%_x28 = load i32, i32* %_x27, align 4
	%_t29 = getelementptr inbounds [1 x i8], [1 x i8]* @.str6, i32 0, i32 0
	call void @putstr(i8* %_t29)
	call void @putint(i32 %_x28)
	%_t30 = getelementptr inbounds [2 x i8], [2 x i8]* @.str7, i32 0, i32 0
	call void @putstr(i8* %_t30)
	%_t31 = alloca i32, align 4
	%_x32 = getelementptr inbounds i32, i32* %_t31, i32 0
	; store 33
	store i32 1, i32* %_x32, align 4
	%_x34 = load i32, i32* %_x32, align 4
	%_x35 = add i32 %_x34, 2
	; getelementptr 36
	%_t37 = mul i32 %_x35, 1
	%_x36 = getelementptr inbounds i32, i32* %_x11, i32 %_t37
	%_x38 = load i32, i32* %_x36, align 4
	%_x39 = load i32, i32* %_x32, align 4
	%_x40 = add i32 %_x39, 1
	%_x41 = load i32, i32* %_x32, align 4
	; getelementptr 42
	%_t43 = mul i32 %_x40, 2
	%_x42 = getelementptr inbounds i32, i32* %_x13, i32 %_t43
	; getelementptr 44
	%_t45 = mul i32 %_x41, 1
	%_x44 = getelementptr inbounds i32, i32* %_x42, i32 %_t45
	%_x46 = load i32, i32* %_x44, align 4
	%_t47 = getelementptr inbounds [1 x i8], [1 x i8]* @.str8, i32 0, i32 0
	call void @putstr(i8* %_t47)
	call void @putint(i32 %_x38)
	%_t48 = getelementptr inbounds [2 x i8], [2 x i8]* @.str9, i32 0, i32 0
	call void @putstr(i8* %_t48)
	call void @putint(i32 %_x46)
	%_t49 = getelementptr inbounds [2 x i8], [2 x i8]* @.str10, i32 0, i32 0
	call void @putstr(i8* %_t49)
	%_t50 = alloca i32, align 4
	%_x51 = getelementptr inbounds i32, i32* %_t50, i32 0
	; store 52
	store i32 1, i32* %_x51, align 4
	br label %_b1
_b1: ; preds = %_b0, %_b2
	%_x53 = load i32, i32* %_x51, align 4
	%_t54 = icmp ne i32 %_x53, 3
	%_x55 = zext i1 %_t54 to i32
	; if %_x55 then _b2 else _b3
	%_t56 = icmp ne i32 %_x55, 0
	br i1 %_t56, label %_b2, label %_b3
_b2: ; preds = %_b1
	%_x57 = load i32, i32* %_x51, align 4
	%_t58 = getelementptr inbounds [1 x i8], [1 x i8]* @.str11, i32 0, i32 0
	call void @putstr(i8* %_t58)
	call void @putint(i32 %_x57)
	%_t59 = getelementptr inbounds [2 x i8], [2 x i8]* @.str12, i32 0, i32 0
	call void @putstr(i8* %_t59)
	%_x60 = load i32, i32* %_x51, align 4
	%_x61 = add i32 %_x60, 1
	; store 62
	store i32 %_x61, i32* %_x51, align 4
	br label %_b1
_b3: ; preds = %_b1
	%_t63 = alloca [500 x i32], align 4
	%_x64 = getelementptr inbounds [500 x i32], [500 x i32]* %_t63, i32 0, i32 0
	%_x65 = load i32, i32* %_x51, align 4
	%_x66 = load i32, i32* %_x2, align 4
	%_x67 = add i32 %_x65, %_x66
	%_x68 = add i32 %_x67, 1
	; getelementptr 69
	%_x69 = getelementptr inbounds i32, i32* %_x64, i32 0
	%_x70 = call i32 @fun(i32 * %_x69)
	%_x71 = add i32 %_x68, %_x70
	%_t72 = alloca i32, align 4
	%_x73 = getelementptr inbounds i32, i32* %_t72, i32 0
	; store 74
	store i32 %_x71, i32* %_x73, align 4
	%_x75 = load i32, i32* %_x73, align 4
	%_t76 = getelementptr inbounds [1 x i8], [1 x i8]* @.str13, i32 0, i32 0
	call void @putstr(i8* %_t76)
	call void @putint(i32 %_x75)
	%_t77 = getelementptr inbounds [2 x i8], [2 x i8]* @.str14, i32 0, i32 0
	call void @putstr(i8* %_t77)
	%_x78 = load i32, i32* %_x73, align 4
	%_t79 = getelementptr inbounds [1 x i8], [1 x i8]* @.str15, i32 0, i32 0
	call void @putstr(i8* %_t79)
	call void @putint(i32 %_x78)
	%_t80 = getelementptr inbounds [23 x i8], [23 x i8]* @.str16, i32 0, i32 0
	call void @putstr(i8* %_t80)
	ret i32 0
}

