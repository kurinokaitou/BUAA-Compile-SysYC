<CompUnit>
INTTK int
IDENFR ints
LBRACK [
INTCON 10000
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<ConstExp>
RBRACK ]
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
IDENFR intt
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
IDENFR chas
LBRACK [
INTCON 10000
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<ConstExp>
RBRACK ]
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
IDENFR chat
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
IDENFR i
ASSIGN =
INTCON 0
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<Exp>
<InitVal>
<VarDef>
COMMA ,
IDENFR ii
ASSIGN =
INTCON 1
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<Exp>
<InitVal>
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
IDENFR c
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
IDENFR get
LBRACK [
INTCON 10000
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<ConstExp>
RBRACK ]
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
IDENFR get2
LBRACK [
INTCON 10000
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<ConstExp>
RBRACK ]
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
<FuncType>
IDENFR isdigit
LPARENT (
INTTK int
IDENFR x
<FuncFParam>
<FuncFParams>
RPARENT )
  LBRACE {
    IFTK if
    LPARENT (
    IDENFR x
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    GEQ >=
    INTCON 48
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    <LAndExp>
    AND &&
    IDENFR x
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    LEQ <=
    INTCON 57
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    <LAndExp>
    <LOrExp>
    <Cond>
    RPARENT )
    RETURNTK return
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    <Stmt>
    RETURNTK return
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<FuncDef>
INTTK int
<FuncType>
IDENFR power
LPARENT (
INTTK int
IDENFR b
<FuncFParam>
COMMA ,
INTTK int
IDENFR a
<FuncFParam>
<FuncFParams>
RPARENT )
  LBRACE {
    INTTK int
    IDENFR result
    ASSIGN =
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    <InitVal>
    <VarDef>
    SEMICN ;
    <VarDecl>
    WHILETK while
    LPARENT (
    IDENFR a
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    NEQ !=
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    <LAndExp>
    <LOrExp>
    <Cond>
    RPARENT )
      LBRACE {
        IDENFR result
        <LVal>
        ASSIGN =
        IDENFR result
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        MULT *
        IDENFR b
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        SEMICN ;
        <Stmt>
        IDENFR a
        <LVal>
        ASSIGN =
        IDENFR a
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        MINU -
        INTCON 1
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        SEMICN ;
        <Stmt>
      RBRACE }
      <Block>
    <Stmt>
    <Stmt>
    RETURNTK return
    IDENFR result
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<FuncDef>
INTTK int
<FuncType>
IDENFR getstr
LPARENT (
INTTK int
IDENFR get
LBRACK [
RBRACK ]
<FuncFParam>
<FuncFParams>
RPARENT )
  LBRACE {
    INTTK int
    IDENFR x
    <VarDef>
    SEMICN ;
    <VarDecl>
    IDENFR x
    <LVal>
    ASSIGN =
    GETINTTK getint
    LPARENT (
    RPARENT )
    SEMICN ;
    <Stmt>
    INTTK int
    IDENFR length
    ASSIGN =
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    <InitVal>
    <VarDef>
    SEMICN ;
    <VarDecl>
    WHILETK while
    LPARENT (
    IDENFR x
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    NEQ !=
    INTCON 13
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    <LAndExp>
    AND &&
    IDENFR x
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    NEQ !=
    INTCON 10
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    <LAndExp>
    <LOrExp>
    <Cond>
    RPARENT )
      LBRACE {
        IDENFR get
        LBRACK [
        IDENFR length
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        ASSIGN =
        IDENFR x
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        SEMICN ;
        <Stmt>
        IDENFR length
        <LVal>
        ASSIGN =
        IDENFR length
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        PLUS +
        INTCON 1
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        SEMICN ;
        <Stmt>
        IDENFR x
        <LVal>
        ASSIGN =
        GETINTTK getint
        LPARENT (
        RPARENT )
        SEMICN ;
        <Stmt>
      RBRACE }
      <Block>
    <Stmt>
    <Stmt>
    RETURNTK return
    IDENFR length
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<FuncDef>
VOIDTK void
<FuncType>
IDENFR intpush
LPARENT (
INTTK int
IDENFR x
<FuncFParam>
<FuncFParams>
RPARENT )
  LBRACE {
    IDENFR intt
    <LVal>
    ASSIGN =
    IDENFR intt
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    PLUS +
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    IDENFR ints
    LBRACK [
    IDENFR intt
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    ASSIGN =
    IDENFR x
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<FuncDef>
VOIDTK void
<FuncType>
IDENFR chapush
LPARENT (
INTTK int
IDENFR x
<FuncFParam>
<FuncFParams>
RPARENT )
  LBRACE {
    IDENFR chat
    <LVal>
    ASSIGN =
    IDENFR chat
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    PLUS +
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    IDENFR chas
    LBRACK [
    IDENFR chat
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    ASSIGN =
    IDENFR x
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<FuncDef>
INTTK int
<FuncType>
IDENFR intpop
LPARENT (
RPARENT )
  LBRACE {
    IDENFR intt
    <LVal>
    ASSIGN =
    IDENFR intt
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    MINU -
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    RETURNTK return
    IDENFR ints
    LBRACK [
    IDENFR intt
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    PLUS +
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<FuncDef>
INTTK int
<FuncType>
IDENFR chapop
LPARENT (
RPARENT )
  LBRACE {
    IDENFR chat
    <LVal>
    ASSIGN =
    IDENFR chat
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    MINU -
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    RETURNTK return
    IDENFR chas
    LBRACK [
    IDENFR chat
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    PLUS +
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<FuncDef>
VOIDTK void
<FuncType>
IDENFR intadd
LPARENT (
INTTK int
IDENFR x
<FuncFParam>
<FuncFParams>
RPARENT )
  LBRACE {
    IDENFR ints
    LBRACK [
    IDENFR intt
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    ASSIGN =
    IDENFR ints
    LBRACK [
    IDENFR intt
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    MULT *
    INTCON 10
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    IDENFR ints
    LBRACK [
    IDENFR intt
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    ASSIGN =
    IDENFR ints
    LBRACK [
    IDENFR intt
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    PLUS +
    IDENFR x
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<FuncDef>
INTTK int
<FuncType>
IDENFR find
LPARENT (
RPARENT )
  LBRACE {
    IDENFR c
    <LVal>
    ASSIGN =
    IDENFR chapop
    LPARENT (
    RPARENT )
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    IDENFR get2
    LBRACK [
    IDENFR ii
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    ASSIGN =
    INTCON 32
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    IDENFR get2
    LBRACK [
    IDENFR ii
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    PLUS +
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    ASSIGN =
    IDENFR c
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    IDENFR ii
    <LVal>
    ASSIGN =
    IDENFR ii
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    PLUS +
    INTCON 2
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    IFTK if
    LPARENT (
    IDENFR chat
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    EQL ==
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    <LAndExp>
    <LOrExp>
    <Cond>
    RPARENT )
    RETURNTK return
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    <Stmt>
    RETURNTK return
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<FuncDef>
INTTK int
MAINTK main
LPARENT (
RPARENT )
  LBRACE {
    IDENFR intt
    <LVal>
    ASSIGN =
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    IDENFR chat
    <LVal>
    ASSIGN =
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    INTTK int
    IDENFR lengets
    ASSIGN =
    IDENFR getstr
    LPARENT (
    IDENFR get
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    <FuncRParams>
    RPARENT )
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    <InitVal>
    <VarDef>
    SEMICN ;
    <VarDecl>
    WHILETK while
    LPARENT (
    IDENFR i
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    LSS <
    IDENFR lengets
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    <LAndExp>
    <LOrExp>
    <Cond>
    RPARENT )
      LBRACE {
        IFTK if
        LPARENT (
        IDENFR isdigit
        LPARENT (
        IDENFR get
        LBRACK [
        IDENFR i
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        <FuncRParams>
        RPARENT )
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        EQL ==
        INTCON 1
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        <LAndExp>
        <LOrExp>
        <Cond>
        RPARENT )
          LBRACE {
            IDENFR get2
            LBRACK [
            IDENFR ii
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            ASSIGN =
            IDENFR get
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            IDENFR ii
            <LVal>
            ASSIGN =
            IDENFR ii
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            PLUS +
            INTCON 1
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
          RBRACE }
          <Block>
        <Stmt>
        ELSETK else
          LBRACE {
            IFTK if
            LPARENT (
            IDENFR get
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 40
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
            IDENFR chapush
            LPARENT (
            INTCON 40
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            <FuncRParams>
            RPARENT )
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 94
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
            IDENFR chapush
            LPARENT (
            INTCON 94
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            <FuncRParams>
            RPARENT )
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 41
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
              LBRACE {
                IDENFR c
                <LVal>
                ASSIGN =
                IDENFR chapop
                LPARENT (
                RPARENT )
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                SEMICN ;
                <Stmt>
                WHILETK while
                LPARENT (
                IDENFR c
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                NEQ !=
                INTCON 40
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                <Cond>
                RPARENT )
                  LBRACE {
                    IDENFR get2
                    LBRACK [
                    IDENFR ii
                    <LVal>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    RBRACK ]
                    <LVal>
                    ASSIGN =
                    INTCON 32
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    SEMICN ;
                    <Stmt>
                    IDENFR get2
                    LBRACK [
                    IDENFR ii
                    <LVal>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    PLUS +
                    INTCON 1
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    RBRACK ]
                    <LVal>
                    ASSIGN =
                    IDENFR c
                    <LVal>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    SEMICN ;
                    <Stmt>
                    IDENFR ii
                    <LVal>
                    ASSIGN =
                    IDENFR ii
                    <LVal>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    PLUS +
                    INTCON 2
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    SEMICN ;
                    <Stmt>
                    IDENFR c
                    <LVal>
                    ASSIGN =
                    IDENFR chapop
                    LPARENT (
                    RPARENT )
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    SEMICN ;
                    <Stmt>
                  RBRACE }
                  <Block>
                <Stmt>
                <Stmt>
              RBRACE }
              <Block>
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 43
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
              LBRACE {
                WHILETK while
                LPARENT (
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 43
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 45
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 42
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 47
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 37
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 94
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                <Cond>
                RPARENT )
                  LBRACE {
                    IFTK if
                    LPARENT (
                    IDENFR find
                    LPARENT (
                    RPARENT )
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    EQL ==
                    INTCON 0
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    <LAndExp>
                    <LOrExp>
                    <Cond>
                    RPARENT )
                    BREAKTK break
                    SEMICN ;
                    <Stmt>
                    <Stmt>
                  RBRACE }
                  <Block>
                <Stmt>
                <Stmt>
                IDENFR chapush
                LPARENT (
                INTCON 43
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                <FuncRParams>
                RPARENT )
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                SEMICN ;
                <Stmt>
              RBRACE }
              <Block>
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 45
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
              LBRACE {
                WHILETK while
                LPARENT (
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 43
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 45
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 42
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 47
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 37
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 94
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                <Cond>
                RPARENT )
                  LBRACE {
                    IFTK if
                    LPARENT (
                    IDENFR find
                    LPARENT (
                    RPARENT )
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    EQL ==
                    INTCON 0
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    <LAndExp>
                    <LOrExp>
                    <Cond>
                    RPARENT )
                    BREAKTK break
                    SEMICN ;
                    <Stmt>
                    <Stmt>
                  RBRACE }
                  <Block>
                <Stmt>
                <Stmt>
                IDENFR chapush
                LPARENT (
                INTCON 45
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                <FuncRParams>
                RPARENT )
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                SEMICN ;
                <Stmt>
              RBRACE }
              <Block>
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 42
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
              LBRACE {
                WHILETK while
                LPARENT (
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 42
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 47
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 37
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 94
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                <Cond>
                RPARENT )
                  LBRACE {
                    IFTK if
                    LPARENT (
                    IDENFR find
                    LPARENT (
                    RPARENT )
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    EQL ==
                    INTCON 0
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    <LAndExp>
                    <LOrExp>
                    <Cond>
                    RPARENT )
                    BREAKTK break
                    SEMICN ;
                    <Stmt>
                    <Stmt>
                  RBRACE }
                  <Block>
                <Stmt>
                <Stmt>
                IDENFR chapush
                LPARENT (
                INTCON 42
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                <FuncRParams>
                RPARENT )
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                SEMICN ;
                <Stmt>
              RBRACE }
              <Block>
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 47
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
              LBRACE {
                WHILETK while
                LPARENT (
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 42
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 47
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 37
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 94
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                <Cond>
                RPARENT )
                  LBRACE {
                    IFTK if
                    LPARENT (
                    IDENFR find
                    LPARENT (
                    RPARENT )
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    EQL ==
                    INTCON 0
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    <LAndExp>
                    <LOrExp>
                    <Cond>
                    RPARENT )
                    BREAKTK break
                    SEMICN ;
                    <Stmt>
                    <Stmt>
                  RBRACE }
                  <Block>
                <Stmt>
                <Stmt>
                IDENFR chapush
                LPARENT (
                INTCON 47
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                <FuncRParams>
                RPARENT )
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                SEMICN ;
                <Stmt>
              RBRACE }
              <Block>
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 37
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
              LBRACE {
                WHILETK while
                LPARENT (
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 42
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 47
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 37
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                OR ||
                IDENFR chas
                LBRACK [
                IDENFR chat
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                EQL ==
                INTCON 94
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                <Cond>
                RPARENT )
                  LBRACE {
                    IFTK if
                    LPARENT (
                    IDENFR find
                    LPARENT (
                    RPARENT )
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    EQL ==
                    INTCON 0
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <RelExp>
                    <EqExp>
                    <LAndExp>
                    <LOrExp>
                    <Cond>
                    RPARENT )
                    BREAKTK break
                    SEMICN ;
                    <Stmt>
                    <Stmt>
                  RBRACE }
                  <Block>
                <Stmt>
                <Stmt>
                IDENFR chapush
                LPARENT (
                INTCON 37
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                <FuncRParams>
                RPARENT )
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                SEMICN ;
                <Stmt>
              RBRACE }
              <Block>
            <Stmt>
            <Stmt>
            IDENFR get2
            LBRACK [
            IDENFR ii
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            ASSIGN =
            INTCON 32
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            IDENFR ii
            <LVal>
            ASSIGN =
            IDENFR ii
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            PLUS +
            INTCON 1
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
          RBRACE }
          <Block>
        <Stmt>
        <Stmt>
        IDENFR i
        <LVal>
        ASSIGN =
        IDENFR i
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        PLUS +
        INTCON 1
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        SEMICN ;
        <Stmt>
      RBRACE }
      <Block>
    <Stmt>
    <Stmt>
    WHILETK while
    LPARENT (
    IDENFR chat
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    GRE >
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    <LAndExp>
    <LOrExp>
    <Cond>
    RPARENT )
      LBRACE {
        INTTK int
        IDENFR c
        ASSIGN =
        IDENFR chapop
        LPARENT (
        RPARENT )
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        <InitVal>
        <VarDef>
        SEMICN ;
        <VarDecl>
        IDENFR get2
        LBRACK [
        IDENFR ii
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        ASSIGN =
        INTCON 32
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        SEMICN ;
        <Stmt>
        IDENFR get2
        LBRACK [
        IDENFR ii
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        PLUS +
        INTCON 1
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        ASSIGN =
        IDENFR c
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        SEMICN ;
        <Stmt>
        IDENFR ii
        <LVal>
        ASSIGN =
        IDENFR ii
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        PLUS +
        INTCON 2
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        SEMICN ;
        <Stmt>
      RBRACE }
      <Block>
    <Stmt>
    <Stmt>
    IDENFR get2
    LBRACK [
    IDENFR ii
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    ASSIGN =
    INTCON 64
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    IDENFR i
    <LVal>
    ASSIGN =
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    WHILETK while
    LPARENT (
    IDENFR get2
    LBRACK [
    IDENFR i
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    NEQ !=
    INTCON 64
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <RelExp>
    <EqExp>
    <LAndExp>
    <LOrExp>
    <Cond>
    RPARENT )
      LBRACE {
        IFTK if
        LPARENT (
        IDENFR get2
        LBRACK [
        IDENFR i
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        EQL ==
        INTCON 43
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        <LAndExp>
        <LOrExp>
        OR ||
        IDENFR get2
        LBRACK [
        IDENFR i
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        EQL ==
        INTCON 45
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        <LAndExp>
        <LOrExp>
        OR ||
        IDENFR get2
        LBRACK [
        IDENFR i
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        EQL ==
        INTCON 42
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        <LAndExp>
        <LOrExp>
        OR ||
        IDENFR get2
        LBRACK [
        IDENFR i
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        EQL ==
        INTCON 47
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        <LAndExp>
        <LOrExp>
        OR ||
        IDENFR get2
        LBRACK [
        IDENFR i
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        EQL ==
        INTCON 37
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        <LAndExp>
        <LOrExp>
        OR ||
        IDENFR get2
        LBRACK [
        IDENFR i
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        RBRACK ]
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        EQL ==
        INTCON 94
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <RelExp>
        <EqExp>
        <LAndExp>
        <LOrExp>
        <Cond>
        RPARENT )
          LBRACE {
            INTTK int
            IDENFR a
            ASSIGN =
            IDENFR intpop
            LPARENT (
            RPARENT )
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            <InitVal>
            <VarDef>
            SEMICN ;
            <VarDecl>
            INTTK int
            IDENFR b
            ASSIGN =
            IDENFR intpop
            LPARENT (
            RPARENT )
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            <InitVal>
            <VarDef>
            SEMICN ;
            <VarDecl>
            INTTK int
            IDENFR c
            <VarDef>
            SEMICN ;
            <VarDecl>
            IFTK if
            LPARENT (
            IDENFR get2
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 43
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
            IDENFR c
            <LVal>
            ASSIGN =
            IDENFR a
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            PLUS +
            IDENFR b
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get2
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 45
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
            IDENFR c
            <LVal>
            ASSIGN =
            IDENFR b
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            MINU -
            IDENFR a
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get2
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 42
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
            IDENFR c
            <LVal>
            ASSIGN =
            IDENFR a
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            MULT *
            IDENFR b
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get2
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 47
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
            IDENFR c
            <LVal>
            ASSIGN =
            IDENFR b
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            DIV /
            IDENFR a
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get2
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 37
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
            IDENFR c
            <LVal>
            ASSIGN =
            IDENFR b
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            MOD %
            IDENFR a
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            <Stmt>
            IFTK if
            LPARENT (
            IDENFR get2
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            EQL ==
            INTCON 94
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
            IDENFR c
            <LVal>
            ASSIGN =
            IDENFR power
            LPARENT (
            IDENFR b
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            COMMA ,
            IDENFR a
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            <FuncRParams>
            RPARENT )
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
            <Stmt>
            IDENFR intpush
            LPARENT (
            IDENFR c
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            <FuncRParams>
            RPARENT )
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            SEMICN ;
            <Stmt>
          RBRACE }
          <Block>
        <Stmt>
        ELSETK else
          LBRACE {
            IFTK if
            LPARENT (
            IDENFR get2
            LBRACK [
            IDENFR i
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <Exp>
            RBRACK ]
            <LVal>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            NEQ !=
            INTCON 32
            <Number>
            <PrimaryExp>
            <UnaryExp>
            <MulExp>
            <AddExp>
            <RelExp>
            <EqExp>
            <LAndExp>
            <LOrExp>
            <Cond>
            RPARENT )
              LBRACE {
                IDENFR intpush
                LPARENT (
                IDENFR get2
                LBRACK [
                IDENFR i
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                MINU -
                INTCON 48
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                <FuncRParams>
                RPARENT )
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                SEMICN ;
                <Stmt>
                IDENFR ii
                <LVal>
                ASSIGN =
                INTCON 1
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                SEMICN ;
                <Stmt>
                WHILETK while
                LPARENT (
                IDENFR get2
                LBRACK [
                IDENFR i
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                PLUS +
                IDENFR ii
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                RBRACK ]
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                NEQ !=
                INTCON 32
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <RelExp>
                <EqExp>
                <LAndExp>
                <LOrExp>
                <Cond>
                RPARENT )
                  LBRACE {
                    IDENFR intadd
                    LPARENT (
                    IDENFR get2
                    LBRACK [
                    IDENFR i
                    <LVal>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    PLUS +
                    IDENFR ii
                    <LVal>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    RBRACK ]
                    <LVal>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    MINU -
                    INTCON 48
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    <FuncRParams>
                    RPARENT )
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    SEMICN ;
                    <Stmt>
                    IDENFR ii
                    <LVal>
                    ASSIGN =
                    IDENFR ii
                    <LVal>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    PLUS +
                    INTCON 1
                    <Number>
                    <PrimaryExp>
                    <UnaryExp>
                    <MulExp>
                    <AddExp>
                    <Exp>
                    SEMICN ;
                    <Stmt>
                  RBRACE }
                  <Block>
                <Stmt>
                <Stmt>
                IDENFR i
                <LVal>
                ASSIGN =
                IDENFR i
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                PLUS +
                IDENFR ii
                <LVal>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                MINU -
                INTCON 1
                <Number>
                <PrimaryExp>
                <UnaryExp>
                <MulExp>
                <AddExp>
                <Exp>
                SEMICN ;
                <Stmt>
              RBRACE }
              <Block>
            <Stmt>
            <Stmt>
          RBRACE }
          <Block>
        <Stmt>
        <Stmt>
        IDENFR i
        <LVal>
        ASSIGN =
        IDENFR i
        <LVal>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        PLUS +
        INTCON 1
        <Number>
        <PrimaryExp>
        <UnaryExp>
        <MulExp>
        <AddExp>
        <Exp>
        SEMICN ;
        <Stmt>
      RBRACE }
      <Block>
    <Stmt>
    <Stmt>
    PRINTFTK printf
    LPARENT (
    STRCON "%d"
    COMMA ,
    IDENFR ints
    LBRACK [
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RPARENT )
    SEMICN ;
    <Stmt>
    PRINTFTK printf
    LPARENT (
    STRCON "%d"
    COMMA ,
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RPARENT )
    SEMICN ;
    <Stmt>
    RETURNTK return
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<MainFuncDef>
