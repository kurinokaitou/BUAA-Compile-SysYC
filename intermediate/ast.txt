<CompUnit>
INTTK int
MAINTK main
LPARENT (
RPARENT )
  LBRACE {
    CONSTTK const
    INTTK int
    IDENFR k
    ASSIGN =
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <ConstExp>
    <ConstInitVal>
    <ConstDef>
    SEMICN ;
    <ConstDecl>
    INTTK int
    IDENFR n
    ASSIGN =
    IDENFR k
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    <InitVal>
    <VarDef>
    SEMICN ;
    <VarDecl>
    CONSTTK const
    INTTK int
    IDENFR a
    LBRACK [
    INTCON 2
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <ConstExp>
    RBRACK ]
    ASSIGN =
    LBRACE {
    INTCON 2
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <ConstExp>
    <ConstInitVal>
    COMMA ,
    INTCON 3
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <ConstExp>
    <ConstInitVal>
    RBRACE }
    <ConstInitVal>
    <ConstDef>
    SEMICN ;
    <ConstDecl>
    CONSTTK const
    INTTK int
    IDENFR var
    ASSIGN =
    IDENFR a
    LBRACK [
    IDENFR k
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    RBRACK ]
    <LVal>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <ConstExp>
    <ConstInitVal>
    <ConstDef>
    SEMICN ;
    <ConstDecl>
    IDENFR func
    LPARENT (
    INTCON 1
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    COMMA ,
    INTCON 2
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    COMMA ,
    INTCON 3
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    <FuncRParams>
    RPARENT )
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
    SEMICN ;
    <Stmt>
    RETURNTK return
    INTCON 0
    <Number>
    <PrimaryExp>
    <UnaryExp>
    <MulExp>
    <AddExp>
    <Exp>
SEMICN ;
    <Stmt>
  RBRACE }
  <Block>
<MainFuncDef>
