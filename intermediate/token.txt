INTTK int
IDENFR a
ASSIGN =
INTCON 1
SEMICN ;
CONSTTK const
INTTK int
IDENFR c
ASSIGN =
INTCON 2
SEMICN ;
INTTK int
IDENFR arr
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
COMMA ,
LBRACE {
INTCON 3
COMMA ,
INTCON 4
RBRACE }
RBRACE }
COMMA ,
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
COMMA ,
LBRACE {
INTCON 3
COMMA ,
INTCON 4
RBRACE }
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR add
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
INTTK int
IDENFR d
ASSIGN =
IDENFR a
PLUS +
IDENFR b
SEMICN ;
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR d
SEMICN ;
RETURNTK return
IDENFR d
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR var
ASSIGN =
INTCON 1
SEMICN ;
CONSTTK const
INTTK int
IDENFR var2
ASSIGN =
INTCON 2
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d"
COMMA ,
IDENFR var
RPARENT )
SEMICN ;
RBRACE }
