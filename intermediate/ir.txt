declare i32 @getint( ) #0

@a = global i32 1
@c = constant i32 2
@arr = global [8 x i32] [i32 1, i32 2, i32 3, i32 4, i32 1, i32 2, i32 3, i32 4]

define void @putint(i32 %n) #0 {
b0: ; preds = 
	ret void
}

define i32 @main() #0 {
b0: ; preds = 
	%t0 = alloca i32, align 4
	%x1 = getelementptr inbounds i32, i32* %t0, i32 0
	%x2 = call i32 @getint()
	; store 3
	store i32 %x2, i32* %x1, align 4
	%t4 = alloca i32, align 4
	%x5 = getelementptr inbounds i32, i32* %t4, i32 0
	; store 6
	store i32 0, i32* %x5, align 4
	br label %b1
b1: ; preds = %b0, %b4
	%x7 = load i32, i32* %x1, align 4
	%t8 = icmp slt i32 %x7, 10
	%x9 = zext i1 %t8 to i32
	; if %x9 then b2 else b3
	%t10 = icmp ne i32 %x9, 0
	br i1 %t10, label %b2, label %b3
b2: ; preds = %b1
	%x11 = load i32, i32* %x5, align 4
	%t12 = icmp slt i32 %x11, 100
	%x13 = zext i1 %t12 to i32
	br label %b3
b3: ; preds = %b1, %b2
	%x14 = phi i32 [%x9, %b1], [%x13, %b2]
	; if %x14 then b4 else b5
	%t15 = icmp ne i32 %x14, 0
	br i1 %t15, label %b4, label %b5
b4: ; preds = %b3
	%x16 = load i32, i32* %x11, align 4
	%x17 = add i32 %x16, 1
	; store 18
	store i32 %x17, i32* %x16, align 4
	br label %b1
b5: ; preds = %b3
	%x19 = load i32, i32* %x16, align 4
	call void @putint(i32 %x19)
	ret i32 0
}

