@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}


@normal_const_1 = constant i32 114514
@normal_const_2 = constant i32 1919810
@normal_const_3 = constant i32 18
@normal_const_4 = constant i32 37
@normal_const_5 = constant i32 51
@normal_const_6 = constant i32 82
@array_const_1 = constant [2 x i32] [i32 114514, i32 1919810]
@array_const_2 = constant [4 x i32] [i32 18, i32 37, i32 51, i32 82]
@normal_out_1 = global i32 114514
@normal_out_2 = global i32 415411
@normal_out_3 = global i32 18
@normal_out_4 = global i32 37
@normal_out_5 = global i32 51
@normal_out_6 = global i32 82
@normal_out_7 = global i32 zeroinitializer
@array_out_1 = global [4 x i32] zeroinitializer
@array_out_2 = global [4 x i32] zeroinitializer
@array_out_3 = global [4 x i32] [i32 81, i32 73, i32 15, i32 28]
@array_out_4 = global [4 x i32] [i32 81, i32 73, i32 15, i32 28]

@.str1 = constant [1 x i8] c"\00"
@.str2 = constant [1 x i8] c"\00"
@.str3 = constant [1 x i8] c"\00"
@.str4 = constant [1 x i8] c"\00"
@.str5 = constant [1 x i8] c"\00"
@.str6 = constant [1 x i8] c"\00"
@.str7 = constant [9 x i8] c"18375182\00"
@.str8 = constant [9 x i8] c"18375182\00"

define void @do_nothing() #0 {
_b0: ; preds = 
	; getelementptr 0
	%_x0 = getelementptr inbounds [2 x i32], [2 x i32]* @array_const_1, i32 0, i32 0
	; getelementptr 1
	%_x1 = getelementptr inbounds [4 x i32], [4 x i32]* @array_const_2, i32 0, i32 0
	; getelementptr 2
	%_x2 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_1, i32 0, i32 0
	; getelementptr 3
	%_x3 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_2, i32 0, i32 0
	; getelementptr 4
	%_x4 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_3, i32 0, i32 0
	; getelementptr 5
	%_x5 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_4, i32 0, i32 0
	ret void
}

define void @do_nothing_but_return() #0 {
_b0: ; preds = 
	; getelementptr 0
	%_x0 = getelementptr inbounds [2 x i32], [2 x i32]* @array_const_1, i32 0, i32 0
	; getelementptr 1
	%_x1 = getelementptr inbounds [4 x i32], [4 x i32]* @array_const_2, i32 0, i32 0
	; getelementptr 2
	%_x2 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_1, i32 0, i32 0
	; getelementptr 3
	%_x3 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_2, i32 0, i32 0
	; getelementptr 4
	%_x4 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_3, i32 0, i32 0
	; getelementptr 5
	%_x5 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_4, i32 0, i32 0
	ret void
}

define i32 @reverse_something(i32 %to_be_reversed) #0 {
_b0: ; preds = 
	; getelementptr 0
	%_x0 = getelementptr inbounds [2 x i32], [2 x i32]* @array_const_1, i32 0, i32 0
	; getelementptr 1
	%_x1 = getelementptr inbounds [4 x i32], [4 x i32]* @array_const_2, i32 0, i32 0
	; getelementptr 2
	%_x2 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_1, i32 0, i32 0
	; getelementptr 3
	%_x3 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_2, i32 0, i32 0
	; getelementptr 4
	%_x4 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_3, i32 0, i32 0
	; getelementptr 5
	%_x5 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_4, i32 0, i32 0
	%_t6 = alloca i32, align 4
	%_x7 = getelementptr inbounds i32, i32* %_t6, i32 0
	; store 8
	store i32 %to_be_reversed, i32* %_x7, align 4
	%_t9 = alloca i32, align 4
	%_x10 = getelementptr inbounds i32, i32* %_t9, i32 0
	; store 11
	store i32 0, i32* %_x10, align 4
	%_t12 = alloca i32, align 4
	%_x13 = getelementptr inbounds i32, i32* %_t12, i32 0
	br label %_b1
_b1: ; preds = %_b0, %_b2
	%_x14 = load i32, i32* %_x7, align 4
	%_t15 = icmp sgt i32 %_x14, 0
	%_x16 = zext i1 %_t15 to i32
	; if %_x16 then _b2 else _b3
	%_t17 = icmp ne i32 %_x16, 0
	br i1 %_t17, label %_b2, label %_b3
_b2: ; preds = %_b1
	%_x18 = load i32, i32* %_x10, align 4
	%_x19 = mul i32 %_x18, 10
	; store 20
	store i32 %_x19, i32* %_x10, align 4
	%_x21 = load i32, i32* %_x7, align 4
	%_x22 = srem i32 %_x21, 10
	; store 23
	store i32 %_x22, i32* %_x13, align 4
	%_x24 = load i32, i32* %_x10, align 4
	%_x25 = load i32, i32* %_x13, align 4
	%_x26 = add i32 %_x24, %_x25
	; store 27
	store i32 %_x26, i32* %_x10, align 4
	%_x28 = load i32, i32* %_x7, align 4
	%_x29 = sdiv i32 %_x28, 10
	; store 30
	store i32 %_x29, i32* %_x7, align 4
	br label %_b1
_b3: ; preds = %_b1
	%_x31 = load i32, i32* %_x10, align 4
	ret i32 %_x31
}

define void @reverse_all_and_printf(i32 %normal, i32 * %array_1, i32 * %array_2) #0 {
_b0: ; preds = 
	; getelementptr 0
	%_x0 = getelementptr inbounds [2 x i32], [2 x i32]* @array_const_1, i32 0, i32 0
	; getelementptr 1
	%_x1 = getelementptr inbounds [4 x i32], [4 x i32]* @array_const_2, i32 0, i32 0
	; getelementptr 2
	%_x2 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_1, i32 0, i32 0
	; getelementptr 3
	%_x3 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_2, i32 0, i32 0
	; getelementptr 4
	%_x4 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_3, i32 0, i32 0
	; getelementptr 5
	%_x5 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_4, i32 0, i32 0
	%_t6 = alloca i32, align 4
	%_x7 = getelementptr inbounds i32, i32* %_t6, i32 0
	; store 8
	store i32 %normal, i32* %_x7, align 4
	%_x9 = load i32, i32* %_x7, align 4
	%_x10 = call i32 @reverse_something(i32 %_x9)
	%_t11 = getelementptr inbounds [1 x i8], [1 x i8]* @.str1, i32 0, i32 0
	call void @putstr(i8* %_t11)
	call void @putint(i32 %_x10)
	%_t12 = getelementptr inbounds [1 x i8], [1 x i8]* @.str2, i32 0, i32 0
	call void @putstr(i8* %_t12)
	%_t13 = alloca i32, align 4
	%_x14 = getelementptr inbounds i32, i32* %_t13, i32 0
	; store 15
	store i32 0, i32* %_x14, align 4
	br label %_b1
_b1: ; preds = %_b0, %_b2
	%_x16 = load i32, i32* %_x14, align 4
	%_t17 = icmp slt i32 %_x16, 4
	%_x18 = zext i1 %_t17 to i32
	; if %_x18 then _b2 else _b3
	%_t19 = icmp ne i32 %_x18, 0
	br i1 %_t19, label %_b2, label %_b3
_b2: ; preds = %_b1
	%_x20 = load i32, i32* %_x14, align 4
	; getelementptr 21
	%_t22 = mul i32 %_x20, 1
	%_x21 = getelementptr inbounds i32, i32* %array_1, i32 %_t22
	%_x23 = load i32, i32* %_x21, align 4
	%_x24 = call i32 @reverse_something(i32 %_x23)
	%_t25 = getelementptr inbounds [1 x i8], [1 x i8]* @.str3, i32 0, i32 0
	call void @putstr(i8* %_t25)
	call void @putint(i32 %_x24)
	%_t26 = getelementptr inbounds [1 x i8], [1 x i8]* @.str4, i32 0, i32 0
	call void @putstr(i8* %_t26)
	%_x27 = load i32, i32* %_x14, align 4
	%_x28 = add i32 %_x27, 1
	; store 29
	store i32 %_x28, i32* %_x14, align 4
	br label %_b1
	br label %_b1
_b3: ; preds = %_b1
	%_t30 = alloca i32, align 4
	%_x31 = getelementptr inbounds i32, i32* %_t30, i32 0
	; store 32
	store i32 2, i32* %_x31, align 4
	%_t33 = alloca i32, align 4
	%_x34 = getelementptr inbounds i32, i32* %_t33, i32 0
	; store 35
	store i32 0, i32* %_x34, align 4
	br label %_b4
_b4: ; preds = %_b3, %_b8
	%_x36 = load i32, i32* %_x31, align 4
	%_t37 = icmp sgt i32 %_x36, 0
	%_x38 = zext i1 %_t37 to i32
	; if %_x38 then _b5 else _b9
	%_t39 = icmp ne i32 %_x38, 0
	br i1 %_t39, label %_b5, label %_b9
_b5: ; preds = %_b4
	br label %_b6
_b6: ; preds = %_b5, %_b7
	%_x40 = load i32, i32* %_x34, align 4
	%_t41 = icmp slt i32 %_x40, 2
	%_x42 = zext i1 %_t41 to i32
	; if %_x42 then _b7 else _b8
	%_t43 = icmp ne i32 %_x42, 0
	br i1 %_t43, label %_b7, label %_b8
_b7: ; preds = %_b6
	%_x44 = load i32, i32* %_x31, align 4
	%_x45 = sub i32 2, %_x44
	%_x46 = load i32, i32* %_x34, align 4
	; getelementptr 47
	%_t48 = mul i32 %_x45, 2
	%_x47 = getelementptr inbounds i32, i32* %array_2, i32 %_t48
	; getelementptr 49
	%_t50 = mul i32 %_x46, 1
	%_x49 = getelementptr inbounds i32, i32* %_x47, i32 %_t50
	%_x51 = load i32, i32* %_x49, align 4
	%_x52 = call i32 @reverse_something(i32 %_x51)
	%_t53 = getelementptr inbounds [1 x i8], [1 x i8]* @.str5, i32 0, i32 0
	call void @putstr(i8* %_t53)
	call void @putint(i32 %_x52)
	%_t54 = getelementptr inbounds [1 x i8], [1 x i8]* @.str6, i32 0, i32 0
	call void @putstr(i8* %_t54)
	%_x55 = load i32, i32* %_x34, align 4
	%_x56 = add i32 %_x55, 1
	; store 57
	store i32 %_x56, i32* %_x34, align 4
	br label %_b6
_b8: ; preds = %_b6
	; store 58
	store i32 0, i32* %_x34, align 4
	%_x59 = load i32, i32* %_x31, align 4
	%_x60 = sub i32 %_x59, 1
	; store 61
	store i32 %_x60, i32* %_x31, align 4
	br label %_b4
_b9: ; preds = %_b4
	ret void
}

define i32 @main() #0 {
_b0: ; preds = 
	; getelementptr 0
	%_x0 = getelementptr inbounds [2 x i32], [2 x i32]* @array_const_1, i32 0, i32 0
	; getelementptr 1
	%_x1 = getelementptr inbounds [4 x i32], [4 x i32]* @array_const_2, i32 0, i32 0
	; getelementptr 2
	%_x2 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_1, i32 0, i32 0
	; getelementptr 3
	%_x3 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_2, i32 0, i32 0
	; getelementptr 4
	%_x4 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_3, i32 0, i32 0
	; getelementptr 5
	%_x5 = getelementptr inbounds [4 x i32], [4 x i32]* @array_out_4, i32 0, i32 0
	%_t6 = alloca i32, align 4
	%_x7 = getelementptr inbounds i32, i32* %_t6, i32 0
	%_x8 = call i32 @getint()
	; store 9
	store i32 %_x8, i32* %_x7, align 4
	%_t10 = getelementptr inbounds [9 x i8], [9 x i8]* @.str7, i32 0, i32 0
	call void @putstr(i8* %_t10)
	%_t11 = alloca i32, align 4
	%_x12 = getelementptr inbounds i32, i32* %_t11, i32 0
	%_t13 = alloca i32, align 4
	%_x14 = getelementptr inbounds i32, i32* %_t13, i32 0
	%_t15 = alloca i32, align 4
	%_x16 = getelementptr inbounds i32, i32* %_t15, i32 0
	%_t17 = alloca i32, align 4
	%_x18 = getelementptr inbounds i32, i32* %_t17, i32 0
	%_t19 = alloca [4 x i32], align 4
	%_x20 = getelementptr inbounds [4 x i32], [4 x i32]* %_t19, i32 0, i32 0
	%_t21 = alloca [4 x i32], align 4
	%_x22 = getelementptr inbounds [4 x i32], [4 x i32]* %_t21, i32 0, i32 0
	; store 23
	store i32 18375182, i32* %_x12, align 4
	%_x24 = load i32, i32* @normal_out_2, align 4
	%_x25 = call i32 @reverse_something(i32 %_x24)
	; store 26
	store i32 %_x25, i32* %_x14, align 4
	; store 27
	store i32 0, i32* %_x16, align 4
	; store 28
	store i32 0, i32* %_x18, align 4
	; getelementptr 29
	%_x29 = getelementptr inbounds i32, i32* %_x20, i32 0
	; store 30
	store i32 81, i32* %_x29, align 4
	; getelementptr 31
	%_x31 = getelementptr inbounds i32, i32* %_x20, i32 1
	; store 32
	store i32 73, i32* %_x31, align 4
	; getelementptr 33
	%_x33 = getelementptr inbounds i32, i32* %_x20, i32 2
	; store 34
	store i32 15, i32* %_x33, align 4
	; getelementptr 35
	%_x35 = getelementptr inbounds i32, i32* %_x20, i32 3
	; store 36
	store i32 28, i32* %_x35, align 4
	; getelementptr 37
	%_x37 = getelementptr inbounds i32, i32* %_x22, i32 0
	; getelementptr 38
	%_x38 = getelementptr inbounds i32, i32* %_x37, i32 0
	; store 39
	store i32 81, i32* %_x38, align 4
	; getelementptr 40
	%_x40 = getelementptr inbounds i32, i32* %_x22, i32 0
	; getelementptr 41
	%_x41 = getelementptr inbounds i32, i32* %_x40, i32 1
	; store 42
	store i32 73, i32* %_x41, align 4
	; getelementptr 43
	%_x43 = getelementptr inbounds i32, i32* %_x22, i32 2
	; getelementptr 44
	%_x44 = getelementptr inbounds i32, i32* %_x43, i32 0
	; store 45
	store i32 15, i32* %_x44, align 4
	; getelementptr 46
	%_x46 = getelementptr inbounds i32, i32* %_x22, i32 2
	; getelementptr 47
	%_x47 = getelementptr inbounds i32, i32* %_x46, i32 1
	; store 48
	store i32 28, i32* %_x47, align 4
	; getelementptr 49
	%_x49 = getelementptr inbounds i32, i32* %_x20, i32 0
	%_x50 = load i32, i32* %_x49, align 4
	; getelementptr 51
	%_x51 = getelementptr inbounds i32, i32* %_x4, i32 0
	; getelementptr 52
	%_x52 = getelementptr inbounds i32, i32* %_x5, i32 0
	call void @reverse_all_and_printf(i32 %_x50, i32 * %_x51, i32 * %_x52)
	%_t53 = icmp eq i32 1, 1
	%_x54 = zext i1 %_t53 to i32
	; if %_x54 then _b1 else _b2
	%_t55 = icmp ne i32 %_x54, 0
	br i1 %_t55, label %_b1, label %_b2
_b1: ; preds = %_b0
	br label %_b3
_b2: ; preds = %_b0
	br label %_b3
_b3: ; preds = %_b1, %_b2
	%_x56 = load i32, i32* %_x12, align 4
	%_x57 = load i32, i32* %_x14, align 4
	%_x58 = sdiv i32 %_x56, %_x57
	%_x59 = load i32, i32* %_x14, align 4
	%_x60 = load i32, i32* %_x12, align 4
	%_t61 = icmp eq i32 %_x59, %_x60
	%_x62 = zext i1 %_t61 to i32
	; if %_x62 then _b4 else _b5
	%_t63 = icmp ne i32 %_x62, 0
	br i1 %_t63, label %_b4, label %_b5
_b4: ; preds = %_b3
	; store 64
	store i32 189191, i32* %_x16, align 4
	br label %_b6
_b5: ; preds = %_b3
	; store 65
	store i32 1919810, i32* %_x16, align 4
	br label %_b6
_b6: ; preds = %_b4, %_b5
	%_x66 = load i32, i32* %_x16, align 4
	%_t67 = icmp ne i32 %_x66, 1919810
	%_x68 = zext i1 %_t67 to i32
	; if %_x68 then _b7 else _b8
	%_t69 = icmp ne i32 %_x68, 0
	br i1 %_t69, label %_b7, label %_b8
_b7: ; preds = %_b6
	; store 70
	store i32 189191, i32* %_x16, align 4
	br label %_b9
_b8: ; preds = %_b6
	br label %_b9
_b9: ; preds = %_b7, %_b8
	%_x71 = load i32, i32* %_x16, align 4
	%_x72 = load i32, i32* %_x14, align 4
	%_t73 = icmp sgt i32 %_x71, %_x72
	%_x74 = zext i1 %_t73 to i32
	; if %_x74 then _b10 else _b11
	%_t75 = icmp ne i32 %_x74, 0
	br i1 %_t75, label %_b10, label %_b11
_b10: ; preds = %_b9
	%_x76 = load i32, i32* %_x16, align 4
	br label %_b12
_b11: ; preds = %_b9
	br label %_b12
_b12: ; preds = %_b10, %_b11
	%_x77 = load i32, i32* %_x16, align 4
	%_x78 = load i32, i32* %_x14, align 4
	%_t79 = icmp slt i32 %_x77, %_x78
	%_x80 = zext i1 %_t79 to i32
	; if %_x80 then _b13 else _b14
	%_t81 = icmp ne i32 %_x80, 0
	br i1 %_t81, label %_b13, label %_b14
_b13: ; preds = %_b12
	%_x82 = load i32, i32* %_x16, align 4
	br label %_b15
_b14: ; preds = %_b12
	br label %_b15
_b15: ; preds = %_b13, %_b14
	%_x83 = load i32, i32* %_x16, align 4
	%_x84 = load i32, i32* %_x14, align 4
	%_t85 = icmp sge i32 %_x83, %_x84
	%_x86 = zext i1 %_t85 to i32
	; if %_x86 then _b16 else _b17
	%_t87 = icmp ne i32 %_x86, 0
	br i1 %_t87, label %_b16, label %_b17
_b16: ; preds = %_b15
	%_x88 = load i32, i32* %_x16, align 4
	br label %_b18
_b17: ; preds = %_b15
	br label %_b18
_b18: ; preds = %_b16, %_b17
	%_x89 = load i32, i32* %_x16, align 4
	%_x90 = load i32, i32* %_x14, align 4
	%_t91 = icmp sle i32 %_x89, %_x90
	%_x92 = zext i1 %_t91 to i32
	; if %_x92 then _b19 else _b20
	%_t93 = icmp ne i32 %_x92, 0
	br i1 %_t93, label %_b19, label %_b20
_b19: ; preds = %_b18
	%_x94 = load i32, i32* %_x16, align 4
	br label %_b21
_b20: ; preds = %_b18
	br label %_b21
_b21: ; preds = %_b19, %_b20
	%_x95 = load i32, i32* %_x18, align 4
	%_t96 = icmp eq i32 %_x95, 0
	%_x97 = zext i1 %_t96 to i32
	; if %_x97 then _b22 else _b23
	%_t98 = icmp ne i32 %_x97, 0
	br i1 %_t98, label %_b22, label %_b23
_b22: ; preds = %_b21
	%_t99 = getelementptr inbounds [9 x i8], [9 x i8]* @.str8, i32 0, i32 0
	call void @putstr(i8* %_t99)
	br label %_b24
_b23: ; preds = %_b21
	br label %_b24
_b24: ; preds = %_b22, %_b23
	%_x100 = load i32, i32* %_x14, align 4
	%_x101 = load i32, i32* %_x16, align 4
	%_x102 = sdiv i32 %_x100, %_x101
	%_x103 = load i32, i32* %_x16, align 4
	%_x104 = mul i32 %_x103, 2
	%_x105 = load i32, i32* %_x14, align 4
	%_x106 = load i32, i32* %_x16, align 4
	%_x107 = srem i32 %_x105, %_x106
	%_x108 = load i32, i32* %_x14, align 4
	%_x109 = load i32, i32* %_x16, align 4
	%_x110 = srem i32 %_x108, %_x109
	%_x111 = add i32 %_x110, 1
	%_x112 = load i32, i32* %_x16, align 4
	%_x113 = add i32 %_x112, 0
	%_x114 = sub i32 0, %_x113
	%_t115 = alloca i32, align 4
	%_x116 = getelementptr inbounds i32, i32* %_t115, i32 0
	; store 117
	store i32 0, i32* %_x116, align 4
	br label %_b25
_b25: ; preds = %_b24, %_b29
	%_x118 = load i32, i32* %_x116, align 4
	%_t119 = icmp slt i32 %_x118, 5
	%_x120 = zext i1 %_t119 to i32
	; if %_x120 then _b26 else _b30
	%_t121 = icmp ne i32 %_x120, 0
	br i1 %_t121, label %_b26, label %_b30
_b26: ; preds = %_b25
	%_x122 = load i32, i32* %_x116, align 4
	%_t123 = icmp eq i32 %_x122, 2
	%_x124 = zext i1 %_t123 to i32
	; if %_x124 then _b27 else _b28
	%_t125 = icmp ne i32 %_x124, 0
	br i1 %_t125, label %_b27, label %_b28
_b27: ; preds = %_b26
	br label %_b30
_b28: ; preds = %_b26
	br label %_b29
_b29: ; preds = %_b28
	%_x126 = load i32, i32* %_x116, align 4
	%_x127 = add i32 %_x126, 1
	; store 128
	store i32 %_x127, i32* %_x116, align 4
	br label %_b25
_b30: ; preds = %_b25, %_b27
	ret i32 0
}

