@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}
@n = global i32 zeroinitializer

define i32 @QuickSort(i32 * %arr, i32 %low, i32 %high) #0 {
_entry:
	%g_n = getelementptr inbounds i32, i32* @n, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = icmp slt i32 %low, %high
	%_x1 = zext i1 %_t0 to i32
	; if %_x1 then _b1 else _b16
	%_t2 = icmp ne i32 %_x1, 0
	br i1 %_t2, label %_b1, label %_b16
_b1: ; preds = %_b0
	; getelementptr 3
		%_x3 = getelementptr inbounds i32, i32* %arr, i32 %low
	%_x5 = load i32, i32* %_x3, align 4
	br label %_b2
_b2: ; preds = %_b1, %_b14, %_b13
	%_x6 = phi i32 [%high, %_b1], [%_x7, %_b14], [%_x8, %_b13]
	%_x9 = phi i32 [%low, %_b1], [%_x10, %_b14], [%_x10, %_b13]
	%_t11 = icmp slt i32 %_x9, %_x6
	%_x12 = zext i1 %_t11 to i32
	; if %_x12 then _b3 else _b15
	%_t13 = icmp ne i32 %_x12, 0
	br i1 %_t13, label %_b3, label %_b15
_b3: ; preds = %_b6, %_b2
	%_x8 = phi i32 [%_x14, %_b6], [%_x6, %_b2]
	%_t15 = icmp slt i32 %_x9, %_x8
	%_x16 = zext i1 %_t15 to i32
	; if %_x16 then _b4 else _b5
	%_t17 = icmp ne i32 %_x16, 0
	br i1 %_t17, label %_b4, label %_b5
_b4: ; preds = %_b3
	; getelementptr 18
		%_x18 = getelementptr inbounds i32, i32* %arr, i32 %_x8
	%_x20 = load i32, i32* %_x18, align 4
	%_x21 = sub i32 %_x5, 1
	%_t22 = icmp sgt i32 %_x20, %_x21
	%_x23 = zext i1 %_t22 to i32
	br label %_b5
_b5: ; preds = %_b3, %_b4
	%_x24 = phi i32 [%_x16, %_b3], [%_x23, %_b4]
	; if %_x24 then _b6 else _b7
	%_t25 = icmp ne i32 %_x24, 0
	br i1 %_t25, label %_b6, label %_b7
_b6: ; preds = %_b5
	%_x14 = sub i32 %_x8, 1
	br label %_b3
_b7: ; preds = %_b5
	%_t26 = icmp slt i32 %_x9, %_x8
	%_x27 = zext i1 %_t26 to i32
	; if %_x27 then _b8 else _b9
	%_t28 = icmp ne i32 %_x27, 0
	br i1 %_t28, label %_b8, label %_b9
_b8: ; preds = %_b7
	; getelementptr 29
		%_x29 = getelementptr inbounds i32, i32* %arr, i32 %_x9
	; getelementptr 31
		%_x31 = getelementptr inbounds i32, i32* %arr, i32 %_x8
	%_x33 = load i32, i32* %_x31, align 4
	; store 34
	store i32 %_x33, i32* %_x29, align 4
	%_x35 = add i32 %_x9, 1
	br label %_b9
_b9: ; preds = %_b12, %_b8, %_b7
	%_x10 = phi i32 [%_x36, %_b12], [%_x35, %_b8], [%_x9, %_b7]
	%_t37 = icmp slt i32 %_x10, %_x8
	%_x38 = zext i1 %_t37 to i32
	; if %_x38 then _b10 else _b11
	%_t39 = icmp ne i32 %_x38, 0
	br i1 %_t39, label %_b10, label %_b11
_b10: ; preds = %_b9
	; getelementptr 40
		%_x40 = getelementptr inbounds i32, i32* %arr, i32 %_x10
	%_x42 = load i32, i32* %_x40, align 4
	%_t43 = icmp slt i32 %_x42, %_x5
	%_x44 = zext i1 %_t43 to i32
	br label %_b11
_b11: ; preds = %_b9, %_b10
	%_x45 = phi i32 [%_x38, %_b9], [%_x44, %_b10]
	; if %_x45 then _b12 else _b13
	%_t46 = icmp ne i32 %_x45, 0
	br i1 %_t46, label %_b12, label %_b13
_b12: ; preds = %_b11
	%_x36 = add i32 %_x10, 1
	br label %_b9
_b13: ; preds = %_b11
	%_t47 = icmp slt i32 %_x10, %_x8
	%_x48 = zext i1 %_t47 to i32
	; if %_x48 then _b14 else _b2
	%_t49 = icmp ne i32 %_x48, 0
	br i1 %_t49, label %_b14, label %_b2
_b14: ; preds = %_b13
	; getelementptr 50
		%_x50 = getelementptr inbounds i32, i32* %arr, i32 %_x8
	; getelementptr 52
		%_x52 = getelementptr inbounds i32, i32* %arr, i32 %_x10
	%_x54 = load i32, i32* %_x52, align 4
	; store 55
	store i32 %_x54, i32* %_x50, align 4
	%_x7 = sub i32 %_x8, 1
	br label %_b2
_b15: ; preds = %_b2
	; getelementptr 56
		%_x56 = getelementptr inbounds i32, i32* %arr, i32 %_x9
	; store 58
	store i32 %_x5, i32* %_x56, align 4
	%_x59 = sub i32 %_x9, 1
	; getelementptr 60
	%_x60 = getelementptr inbounds i32, i32* %arr, i32 0
	%_x61 = call i32 @QuickSort(i32 * %_x60, i32 %low, i32 %_x59)
	%_x62 = add i32 %_x9, 1
	; getelementptr 63
	%_x63 = getelementptr inbounds i32, i32* %arr, i32 0
	%_x64 = call i32 @QuickSort(i32 * %_x63, i32 %_x62, i32 %high)
	br label %_b16
_b16: ; preds = %_b15, %_b0
	%_x65 = phi i32 [%_x64, %_b15], [undef, %_b0]
	%_x66 = phi i32 [%_x5, %_b15], [undef, %_b0]
	%_x67 = phi i32 [%_x6, %_b15], [undef, %_b0]
	%_x68 = phi i32 [%_x9, %_b15], [undef, %_b0]
	ret i32 0
}

define i32 @main() #0 {
_entry:
	%g_n = getelementptr inbounds i32, i32* @n, i32 0
	br label %_b0
_b0: ; preds = 
	; store 0
	store i32 10, i32* %g_n, align 4
	%_t1 = alloca [10 x i32], align 4
	%_x2 = getelementptr inbounds [10 x i32], [10 x i32]* %_t1, i32 0, i32 0
	; getelementptr 3
	%_x3 = getelementptr inbounds i32, i32* %_x2, i32 0
	; store 4
	store i32 4, i32* %_x3, align 4
	; getelementptr 5
	%_x5 = getelementptr inbounds i32, i32* %_x2, i32 1
	; store 6
	store i32 3, i32* %_x5, align 4
	; getelementptr 7
	%_x7 = getelementptr inbounds i32, i32* %_x2, i32 2
	; store 8
	store i32 9, i32* %_x7, align 4
	; getelementptr 9
	%_x9 = getelementptr inbounds i32, i32* %_x2, i32 3
	; store 10
	store i32 2, i32* %_x9, align 4
	; getelementptr 11
	%_x11 = getelementptr inbounds i32, i32* %_x2, i32 4
	; store 12
	store i32 0, i32* %_x11, align 4
	; getelementptr 13
	%_x13 = getelementptr inbounds i32, i32* %_x2, i32 5
	; store 14
	store i32 1, i32* %_x13, align 4
	; getelementptr 15
	%_x15 = getelementptr inbounds i32, i32* %_x2, i32 6
	; store 16
	store i32 6, i32* %_x15, align 4
	; getelementptr 17
	%_x17 = getelementptr inbounds i32, i32* %_x2, i32 7
	; store 18
	store i32 5, i32* %_x17, align 4
	; getelementptr 19
	%_x19 = getelementptr inbounds i32, i32* %_x2, i32 8
	; store 20
	store i32 7, i32* %_x19, align 4
	; getelementptr 21
	%_x21 = getelementptr inbounds i32, i32* %_x2, i32 9
	; store 22
	store i32 8, i32* %_x21, align 4
	; getelementptr 23
	%_x23 = getelementptr inbounds i32, i32* %_x2, i32 0
	%_x24 = call i32 @QuickSort(i32 * %_x23, i32 0, i32 9)
	br label %_b1
_b1: ; preds = %_b0, %_b2
	%_x25 = phi i32 [undef, %_b0], [10, %_b2]
	%_x26 = phi i32 [%_x24, %_b0], [%_x27, %_b2]
	%_x28 = load i32, i32* %g_n, align 4
	%_t29 = icmp slt i32 %_x26, %_x28
	%_x30 = zext i1 %_t29 to i32
	; if %_x30 then _b2 else _b3
	%_t31 = icmp ne i32 %_x30, 0
	br i1 %_t31, label %_b2, label %_b3
_b2: ; preds = %_b1
	; getelementptr 32
		%_x32 = getelementptr inbounds i32, i32* %_x2, i32 %_x26
	%_x34 = load i32, i32* %_x32, align 4
	call void @putint(i32 %_x34)
	call void @putint(i32 10)
	%_x27 = add i32 %_x26, 1
	br label %_b1
_b3: ; preds = %_b1
	call void @putint(i32 0)
	ret i32 0
}

