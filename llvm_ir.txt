@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define dso_local i32 @getint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* %1)
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare dso_local i32 @__isoc99_scanf(i8*, ...) #1

define dso_local void @putint(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

define dso_local void @putstr(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  ret void
}
@n = global i32 zeroinitializer

define i32 @QuickSort(i32 * %arr, i32 %low, i32 %high) #0 {
_entry:
	%g_n = getelementptr inbounds i32, i32* @n, i32 0
	br label %_b0
_b0: ; preds = 
	%_t0 = icmp slt i32 %low, %high
	%_x1 = zext i1 %_t0 to i32
	; if %_x1 then _b1 else _b16
	%_t2 = icmp ne i32 %_x1, 0
	br i1 %_t2, label %_b1, label %_b16
_b1: ; preds = %_b0
	; getelementptr 3
	%_t4 = mul i32 %low, 1
	%_x3 = getelementptr inbounds i32, i32* %arr, i32 %_t4
	%_x5 = load i32, i32* %_x3, align 4
	br label %_b2
_b2: ; preds = %_b1, %_b14, %_b13
	%_t6 = icmp slt i32 %low, %high
	%_x7 = zext i1 %_t6 to i32
	; if %_x7 then _b3 else _b15
	%_t8 = icmp ne i32 %_x7, 0
	br i1 %_t8, label %_b3, label %_b15
_b3: ; preds = %_b6, %_b2
	%_t9 = icmp slt i32 %low, %high
	%_x10 = zext i1 %_t9 to i32
	; if %_x10 then _b4 else _b5
	%_t11 = icmp ne i32 %_x10, 0
	br i1 %_t11, label %_b4, label %_b5
_b4: ; preds = %_b3
	; getelementptr 12
	%_t13 = mul i32 %high, 1
	%_x12 = getelementptr inbounds i32, i32* %arr, i32 %_t13
	%_x14 = load i32, i32* %_x12, align 4
	%_x15 = sub i32 %_x5, 1
	%_t16 = icmp sgt i32 %_x14, %_x15
	%_x17 = zext i1 %_t16 to i32
	br label %_b5
_b5: ; preds = %_b3, %_b4
	%_x18 = phi i32 [%_x10, %_b3], [%_x17, %_b4]
	; if %_x18 then _b6 else _b7
	%_t19 = icmp ne i32 %_x18, 0
	br i1 %_t19, label %_b6, label %_b7
_b6: ; preds = %_b5
	%_x20 = sub i32 %high, 1
	br label %_b3
_b7: ; preds = %_b5
	%_t21 = icmp slt i32 %low, %high
	%_x22 = zext i1 %_t21 to i32
	; if %_x22 then _b8 else _b9
	%_t23 = icmp ne i32 %_x22, 0
	br i1 %_t23, label %_b8, label %_b9
_b8: ; preds = %_b7
	; getelementptr 24
	%_t25 = mul i32 %low, 1
	%_x24 = getelementptr inbounds i32, i32* %arr, i32 %_t25
	; getelementptr 26
	%_t27 = mul i32 %high, 1
	%_x26 = getelementptr inbounds i32, i32* %arr, i32 %_t27
	%_x28 = load i32, i32* %_x26, align 4
	; store 29
	store i32 %_x28, i32* %_x24, align 4
	%_x30 = add i32 %low, 1
	br label %_b9
_b9: ; preds = %_b12, %_b8, %_b7
	%_t31 = icmp slt i32 %low, %high
	%_x32 = zext i1 %_t31 to i32
	; if %_x32 then _b10 else _b11
	%_t33 = icmp ne i32 %_x32, 0
	br i1 %_t33, label %_b10, label %_b11
_b10: ; preds = %_b9
	; getelementptr 34
	%_t35 = mul i32 %low, 1
	%_x34 = getelementptr inbounds i32, i32* %arr, i32 %_t35
	%_x36 = load i32, i32* %_x34, align 4
	%_t37 = icmp slt i32 %_x36, %_x5
	%_x38 = zext i1 %_t37 to i32
	br label %_b11
_b11: ; preds = %_b9, %_b10
	%_x39 = phi i32 [%_x32, %_b9], [%_x38, %_b10]
	; if %_x39 then _b12 else _b13
	%_t40 = icmp ne i32 %_x39, 0
	br i1 %_t40, label %_b12, label %_b13
_b12: ; preds = %_b11
	%_x41 = add i32 %low, 1
	br label %_b9
_b13: ; preds = %_b11
	%_t42 = icmp slt i32 %low, %high
	%_x43 = zext i1 %_t42 to i32
	; if %_x43 then _b14 else _b2
	%_t44 = icmp ne i32 %_x43, 0
	br i1 %_t44, label %_b14, label %_b2
_b14: ; preds = %_b13
	; getelementptr 45
	%_t46 = mul i32 %high, 1
	%_x45 = getelementptr inbounds i32, i32* %arr, i32 %_t46
	; getelementptr 47
	%_t48 = mul i32 %low, 1
	%_x47 = getelementptr inbounds i32, i32* %arr, i32 %_t48
	%_x49 = load i32, i32* %_x47, align 4
	; store 50
	store i32 %_x49, i32* %_x45, align 4
	%_x51 = sub i32 %high, 1
	br label %_b2
_b15: ; preds = %_b2
	; getelementptr 52
	%_t53 = mul i32 %low, 1
	%_x52 = getelementptr inbounds i32, i32* %arr, i32 %_t53
	; store 54
	store i32 %_x5, i32* %_x52, align 4
	%_x55 = sub i32 %low, 1
	; getelementptr 56
	%_x56 = getelementptr inbounds i32, i32* %arr, i32 0
	%_x57 = call i32 @QuickSort(i32 * %_x56, i32 %low, i32 %_x55)
	%_x58 = add i32 %low, 1
	; getelementptr 59
	%_x59 = getelementptr inbounds i32, i32* %arr, i32 0
	%_x60 = call i32 @QuickSort(i32 * %_x59, i32 %_x58, i32 %high)
	br label %_b16
_b16: ; preds = %_b15, %_b0
	ret i32 0
}

define i32 @main() #0 {
_entry:
	%g_n = getelementptr inbounds i32, i32* @n, i32 0
	br label %_b0
_b0: ; preds = 
	; store 0
	store i32 10, i32* %g_n, align 4
	%_t1 = alloca [10 x i32], align 4
	%_x2 = getelementptr inbounds [10 x i32], [10 x i32]* %_t1, i32 0, i32 0
	; getelementptr 3
	%_x3 = getelementptr inbounds i32, i32* %_x2, i32 0
	; store 4
	store i32 4, i32* %_x3, align 4
	; getelementptr 5
	%_x5 = getelementptr inbounds i32, i32* %_x2, i32 1
	; store 6
	store i32 3, i32* %_x5, align 4
	; getelementptr 7
	%_x7 = getelementptr inbounds i32, i32* %_x2, i32 2
	; store 8
	store i32 9, i32* %_x7, align 4
	; getelementptr 9
	%_x9 = getelementptr inbounds i32, i32* %_x2, i32 3
	; store 10
	store i32 2, i32* %_x9, align 4
	; getelementptr 11
	%_x11 = getelementptr inbounds i32, i32* %_x2, i32 4
	; store 12
	store i32 0, i32* %_x11, align 4
	; getelementptr 13
	%_x13 = getelementptr inbounds i32, i32* %_x2, i32 5
	; store 14
	store i32 1, i32* %_x13, align 4
	; getelementptr 15
	%_x15 = getelementptr inbounds i32, i32* %_x2, i32 6
	; store 16
	store i32 6, i32* %_x15, align 4
	; getelementptr 17
	%_x17 = getelementptr inbounds i32, i32* %_x2, i32 7
	; store 18
	store i32 5, i32* %_x17, align 4
	; getelementptr 19
	%_x19 = getelementptr inbounds i32, i32* %_x2, i32 8
	; store 20
	store i32 7, i32* %_x19, align 4
	; getelementptr 21
	%_x21 = getelementptr inbounds i32, i32* %_x2, i32 9
	; store 22
	store i32 8, i32* %_x21, align 4
	; getelementptr 23
	%_x23 = getelementptr inbounds i32, i32* %_x2, i32 0
	%_x24 = call i32 @QuickSort(i32 * %_x23, i32 0, i32 9)
	br label %_b1
_b1: ; preds = %_b0, %_b2
	%_x25 = load i32, i32* %g_n, align 4
	%_t26 = icmp slt i32 %_x24, %_x25
	%_x27 = zext i1 %_t26 to i32
	; if %_x27 then _b2 else _b3
	%_t28 = icmp ne i32 %_x27, 0
	br i1 %_t28, label %_b2, label %_b3
_b2: ; preds = %_b1
	; getelementptr 29
	%_t30 = mul i32 %_x24, 1
	%_x29 = getelementptr inbounds i32, i32* %_x2, i32 %_t30
	%_x31 = load i32, i32* %_x29, align 4
	call void @putint(i32 %_x31)
	call void @putint(i32 10)
	%_x32 = add i32 %_x24, 1
	br label %_b1
_b3: ; preds = %_b1
	call void @putint(i32 0)
	ret i32 0
}

